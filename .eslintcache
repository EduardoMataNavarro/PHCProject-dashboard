[{"D:\\Documentos\\UNI\\9no semestre\\PROGRAMACION MULTIMEDIA\\Proyecto\\PCHMayoreo-makeover\\dashboard\\src\\index.js":"1","D:\\Documentos\\UNI\\9no semestre\\PROGRAMACION MULTIMEDIA\\Proyecto\\PCHMayoreo-makeover\\dashboard\\src\\App.js":"2","D:\\Documentos\\UNI\\9no semestre\\PROGRAMACION MULTIMEDIA\\Proyecto\\PCHMayoreo-makeover\\dashboard\\src\\components\\Sidenav.js":"3","D:\\Documentos\\UNI\\9no semestre\\PROGRAMACION MULTIMEDIA\\Proyecto\\PCHMayoreo-makeover\\dashboard\\src\\components\\DetailViews\\Categoria.js":"4","D:\\Documentos\\UNI\\9no semestre\\PROGRAMACION MULTIMEDIA\\Proyecto\\PCHMayoreo-makeover\\dashboard\\src\\components\\DetailViews\\Dashboard.js":"5","D:\\Documentos\\UNI\\9no semestre\\PROGRAMACION MULTIMEDIA\\Proyecto\\PCHMayoreo-makeover\\dashboard\\src\\components\\DetailViews\\Usuario.js":"6","D:\\Documentos\\UNI\\9no semestre\\PROGRAMACION MULTIMEDIA\\Proyecto\\PCHMayoreo-makeover\\dashboard\\src\\components\\DetailViews\\Marca.js":"7","D:\\Documentos\\UNI\\9no semestre\\PROGRAMACION MULTIMEDIA\\Proyecto\\PCHMayoreo-makeover\\dashboard\\src\\components\\DetailViews\\Estado.js":"8","D:\\Documentos\\UNI\\9no semestre\\PROGRAMACION MULTIMEDIA\\Proyecto\\PCHMayoreo-makeover\\dashboard\\src\\components\\DetailViews\\Venta.js":"9","D:\\Documentos\\UNI\\9no semestre\\PROGRAMACION MULTIMEDIA\\Proyecto\\PCHMayoreo-makeover\\dashboard\\src\\components\\DetailViews\\Inventario.js":"10","D:\\Documentos\\UNI\\9no semestre\\PROGRAMACION MULTIMEDIA\\Proyecto\\PCHMayoreo-makeover\\dashboard\\src\\components\\DetailViews\\Sucursal.js":"11","D:\\Documentos\\UNI\\9no semestre\\PROGRAMACION MULTIMEDIA\\Proyecto\\PCHMayoreo-makeover\\dashboard\\src\\components\\ListViews\\Sucursales.js":"12","D:\\Documentos\\UNI\\9no semestre\\PROGRAMACION MULTIMEDIA\\Proyecto\\PCHMayoreo-makeover\\dashboard\\src\\components\\ListViews\\Estados.js":"13","D:\\Documentos\\UNI\\9no semestre\\PROGRAMACION MULTIMEDIA\\Proyecto\\PCHMayoreo-makeover\\dashboard\\src\\components\\ListViews\\Categorias.js":"14","D:\\Documentos\\UNI\\9no semestre\\PROGRAMACION MULTIMEDIA\\Proyecto\\PCHMayoreo-makeover\\dashboard\\src\\components\\ListViews\\Ventas.js":"15","D:\\Documentos\\UNI\\9no semestre\\PROGRAMACION MULTIMEDIA\\Proyecto\\PCHMayoreo-makeover\\dashboard\\src\\components\\ListViews\\Marcas.js":"16","D:\\Documentos\\UNI\\9no semestre\\PROGRAMACION MULTIMEDIA\\Proyecto\\PCHMayoreo-makeover\\dashboard\\src\\components\\ListViews\\Usuarios.js":"17","D:\\Documentos\\UNI\\9no semestre\\PROGRAMACION MULTIMEDIA\\Proyecto\\PCHMayoreo-makeover\\dashboard\\src\\components\\ListViews\\Inventarios.js":"18","D:\\Documentos\\UNI\\9no semestre\\PROGRAMACION MULTIMEDIA\\Proyecto\\PCHMayoreo-makeover\\dashboard\\src\\components\\ListViews\\Roles.js":"19","D:\\Documentos\\UNI\\9no semestre\\PROGRAMACION MULTIMEDIA\\Proyecto\\PCHMayoreo-makeover\\dashboard\\src\\components\\DetailViews\\Rol.js":"20","D:\\Documentos\\UNI\\9no semestre\\PROGRAMACION MULTIMEDIA\\Proyecto\\PCHMayoreo-makeover\\dashboard\\src\\components\\DetailViews\\MetodoEnvio.js":"21","D:\\Documentos\\UNI\\9no semestre\\PROGRAMACION MULTIMEDIA\\Proyecto\\PCHMayoreo-makeover\\dashboard\\src\\components\\DetailViews\\Articulo.js":"22","D:\\Documentos\\UNI\\9no semestre\\PROGRAMACION MULTIMEDIA\\Proyecto\\PCHMayoreo-makeover\\dashboard\\src\\components\\DetailViews\\InventarioDetalle.js":"23","D:\\Documentos\\UNI\\9no semestre\\PROGRAMACION MULTIMEDIA\\Proyecto\\PCHMayoreo-makeover\\dashboard\\src\\components\\Singles\\ChartInfo.js":"24","D:\\Documentos\\UNI\\9no semestre\\PROGRAMACION MULTIMEDIA\\Proyecto\\PCHMayoreo-makeover\\dashboard\\src\\components\\Singles\\DetailviewHeader.js":"25","D:\\Documentos\\UNI\\9no semestre\\PROGRAMACION MULTIMEDIA\\Proyecto\\PCHMayoreo-makeover\\dashboard\\src\\components\\ListViews\\Articulos.js":"26","D:\\Documentos\\UNI\\9no semestre\\PROGRAMACION MULTIMEDIA\\Proyecto\\PCHMayoreo-makeover\\dashboard\\src\\components\\Singles\\ImageGallery.js":"27","D:\\Documentos\\UNI\\9no semestre\\PROGRAMACION MULTIMEDIA\\Proyecto\\PCHMayoreo-makeover\\dashboard\\src\\components\\ListViews\\MetodosEnvio.js":"28","D:\\Documentos\\UNI\\9no semestre\\PROGRAMACION MULTIMEDIA\\Proyecto\\PCHMayoreo-makeover\\dashboard\\src\\components\\ListViews\\MetodosPago.js":"29","D:\\Documentos\\UNI\\9no semestre\\PROGRAMACION MULTIMEDIA\\Proyecto\\PCHMayoreo-makeover\\dashboard\\src\\components\\DetailViews\\MetodoPago.js":"30"},{"size":371,"mtime":1606863818129,"results":"31","hashOfConfig":"32"},{"size":5650,"mtime":1610569027651,"results":"33","hashOfConfig":"32"},{"size":3274,"mtime":1610569733981,"results":"34","hashOfConfig":"32"},{"size":6888,"mtime":1610655680035,"results":"35","hashOfConfig":"32"},{"size":1777,"mtime":1607780535935,"results":"36","hashOfConfig":"32"},{"size":19968,"mtime":1610398674633,"results":"37","hashOfConfig":"32"},{"size":6468,"mtime":1610655402100,"results":"38","hashOfConfig":"32"},{"size":8770,"mtime":1610653731193,"results":"39","hashOfConfig":"32"},{"size":7031,"mtime":1610641286501,"results":"40","hashOfConfig":"32"},{"size":11229,"mtime":1610652662771,"results":"41","hashOfConfig":"32"},{"size":9958,"mtime":1610655534089,"results":"42","hashOfConfig":"32"},{"size":2584,"mtime":1610655514237,"results":"43","hashOfConfig":"32"},{"size":2416,"mtime":1610655456892,"results":"44","hashOfConfig":"32"},{"size":2415,"mtime":1610655370178,"results":"45","hashOfConfig":"32"},{"size":3337,"mtime":1610653830459,"results":"46","hashOfConfig":"32"},{"size":2162,"mtime":1610653768590,"results":"47","hashOfConfig":"32"},{"size":2479,"mtime":1610655996255,"results":"48","hashOfConfig":"32"},{"size":2568,"mtime":1610653763141,"results":"49","hashOfConfig":"32"},{"size":2106,"mtime":1610653789191,"results":"50","hashOfConfig":"32"},{"size":8034,"mtime":1610656681214,"results":"51","hashOfConfig":"32"},{"size":8187,"mtime":1610652704704,"results":"52","hashOfConfig":"32"},{"size":28237,"mtime":1610652619930,"results":"53","hashOfConfig":"32"},{"size":10429,"mtime":1607192085546,"results":"54","hashOfConfig":"32"},{"size":789,"mtime":1607780287071,"results":"55","hashOfConfig":"32"},{"size":1578,"mtime":1608523646614,"results":"56","hashOfConfig":"32"},{"size":2557,"mtime":1610653743872,"results":"57","hashOfConfig":"32"},{"size":1549,"mtime":1609808989956,"results":"58","hashOfConfig":"32"},{"size":2404,"mtime":1610653775601,"results":"59","hashOfConfig":"32"},{"size":2387,"mtime":1610653781803,"results":"60","hashOfConfig":"32"},{"size":7129,"mtime":1610652684399,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"65"},"1qvyo7m",{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"65"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":3,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"65"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":6,"source":"78","usedDeprecatedRules":"65"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":2,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":4,"source":"83","usedDeprecatedRules":"65"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"86","usedDeprecatedRules":"65"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":5,"source":"89","usedDeprecatedRules":"65"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":4,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"100","usedDeprecatedRules":"65"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"103","usedDeprecatedRules":"65"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"108","usedDeprecatedRules":"65"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"111","usedDeprecatedRules":"65"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":3,"source":null},{"filePath":"114","messages":"115","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":3,"source":"116","usedDeprecatedRules":"65"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":6,"source":"119","usedDeprecatedRules":"65"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":5,"source":"122","usedDeprecatedRules":"65"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"65"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"65"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"131","usedDeprecatedRules":"65"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"65"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"137","usedDeprecatedRules":"65"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"140","usedDeprecatedRules":"65"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":2,"source":"143","usedDeprecatedRules":"65"},"D:\\Documentos\\UNI\\9no semestre\\PROGRAMACION MULTIMEDIA\\Proyecto\\PCHMayoreo-makeover\\dashboard\\src\\index.js",["144","145"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);",["146","147"],"D:\\Documentos\\UNI\\9no semestre\\PROGRAMACION MULTIMEDIA\\Proyecto\\PCHMayoreo-makeover\\dashboard\\src\\App.js",["148"],"import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport './App.css';\n\nimport Sidenav from './components/Sidenav';\nimport { FaBars } from 'react-icons/fa';\n/* Detail views */\nimport Dashboard from './components/DetailViews/Dashboard';\nimport Sucursal from './components/DetailViews/Sucursal';\nimport Estado from './components/DetailViews/Estado';\nimport Usuario from './components/DetailViews/Usuario';\nimport Marca from './components/DetailViews/Marca';\nimport Categoria from './components/DetailViews/Categoria';\nimport Articulo from './components/DetailViews/Articulo';\nimport Venta from './components/DetailViews/Venta';\nimport MetodoEnvio from './components/DetailViews/MetodoEnvio';\nimport Inventario from './components/DetailViews/Inventario';\nimport InventarioDetalle from './components/DetailViews/InventarioDetalle';\nimport Rol from './components/DetailViews/Rol'\n\n/* Listviews */\nimport Sucursales from './components/ListViews/Sucursales'\nimport Estados from './components/ListViews/Estados'\nimport Articulos from './components/ListViews/Articulos'\nimport Marcas from './components/ListViews/Marcas'\nimport Categorias from './components/ListViews/Categorias'\nimport Inventarios from './components/ListViews/Inventarios'\nimport Roles from './components/ListViews/Roles'\nimport MetodosEnvio from './components/ListViews/MetodosEnvio'\n\n/* Listviews */\nimport Ventas from './components/ListViews/Ventas';\nimport Usuarios from './components/ListViews/Usuarios';\nimport MetodosPago from './components/ListViews/MetodosPago';\nimport MetodoPago from './components/DetailViews/MetodoPago';\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      toggled: false\n    }\n\n    this.setToggle = this.setToggle.bind(this);\n  }\n\n  setToggle(value) {\n    this.setState({ toggled: value });\n  }\n\n  render() {\n    return (\n      <Router>\n        <div className={`App ${this.state.toggled ? 'toggled' : ''}`}>\n          <Sidenav\n            handleToggle={this.setToggle}\n            toggled={this.state.toggled}\n          />\n          <main>\n            <div className=\"btn-toggle p-2\" onClick={() => this.setToggle(true)}>\n              <FaBars />\n            </div>\n            <div className=\"container-fluid\">\n              <Switch>\n                <Route path='/' exact component={Dashboard} />\n\n                <Route path='/sucursal/detail/:id' exact component={Sucursal} />\n                <Route path='/sucursal/create/' exact render={(props) => <Sucursal isCreating={true} {...props} />} />\n                <Route path='/sucursales' exact component={Sucursales} />\n\n                <Route path='/estado/detail/:id' exact component={Estado} />\n                <Route path='/estado/create' exact render={(props)=> <Estado isCreating={true} {...props} />} />\n                <Route path='/estados' exact component={Estados} />\n\n                <Route path='/articulo/detail/:id' exact component={Articulo} />\n                <Route path='/articulo/create' exact render={(props) => <Articulo isCreating={true} {...props} />} />\n                <Route path='/articulos' exact component={Articulos} />\n\n                <Route path='/marca/detail/:id' exact component={Marca} />\n                <Route path='/marca/create' exact render={(props) => <Marca isCreating={true} {...props} />} />\n                <Route path='/marcas' exact component={Marcas} />\n\n                <Route path='/categoria/detail/:id' exact component={Categoria} />\n                <Route path='/categoria/create' exact render={(props) => <Categoria isCreating={true} {...props} /> } />\n                <Route path='/categorias' exact component={Categorias} />\n\n                <Route path='/inventario/detail/:id' exact component={Inventario} />\n                <Route path='/inventario/create' exact render={(props) => <Inventario isCreating={true} {...props} /> } />\n                <Route path='/inventarios' exact component={Inventarios} />\n                \n                <Route path='/ventas' exact component={Ventas} />\n                <Route path='/venta/:id' exact component={Venta} />\n\n                <Route path='/metodoenvio/detail/:id' exact component={MetodoEnvio} />\n                <Route path='/metodoenvio/create' exact render={(props) => <MetodoEnvio isCreating={true} {...props} /> } />\n                <Route path='/metodosenvio' exact component={MetodosEnvio} />\n\n                <Route path='/metodopago/detail/:id' exact component={MetodoPago} />\n                <Route path='/metodopago/create' exact render={(props) => <MetodoPago isCreating={true} {...props} /> } />\n                <Route path='/metodospago' exact component={MetodosPago} />\n\n                <Route path='/usuario/detail/:id' exact component={Usuario} />\n                <Route path='/usuario/create' exact render={(props) => <Usuario isCreating={true} {...props} /> } />\n                <Route path='/usuarios' exact component={Usuarios} />\n\n                <Route path='/usuario/detail/:id' exact component={Usuario} />\n                <Route path='/usuario/create' exact render={(props) => <Usuario isCreating={true} {...props} /> } />\n                <Route path='/usuarios' exact component={Usuarios} />\n\n                <Route path='/rol/detail/:id' exact component={Rol} />\n                <Route path='/rol/create' exact render={(props) => <Rol isCreating={true} {...props} /> } />\n                <Route path='/roles' exact component={Roles} />\n              </Switch>\n            </div>\n          </main>\n        </div>\n      </Router >\n    );\n  }\n\n}","D:\\Documentos\\UNI\\9no semestre\\PROGRAMACION MULTIMEDIA\\Proyecto\\PCHMayoreo-makeover\\dashboard\\src\\components\\Sidenav.js",[],"D:\\Documentos\\UNI\\9no semestre\\PROGRAMACION MULTIMEDIA\\Proyecto\\PCHMayoreo-makeover\\dashboard\\src\\components\\DetailViews\\Categoria.js",["149","150","151","152","153","154","155","156","157","158","159"],"D:\\Documentos\\UNI\\9no semestre\\PROGRAMACION MULTIMEDIA\\Proyecto\\PCHMayoreo-makeover\\dashboard\\src\\components\\DetailViews\\Dashboard.js",["160"],"import React, { Component } from 'react'\r\nimport ReactJoyride from 'react-joyride';\r\nimport Cookies from 'universal-cookie';\r\nimport ChartInfo from '../Singles/ChartInfo';\r\n\r\nexport default class Dashboard extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            steps: [{\r\n                target: '.dashboard-link',\r\n                content: 'Aquí encontrarás todo'\r\n            }, {\r\n                target: '.dashboard-link',\r\n                content: 'Podrás registrar, editar y eliminar'\r\n            }, {\r\n                target: '.dashboard-link',\r\n                content: 'En cada sección encontrarás el listado de objetos'\r\n            }, {\r\n                target: '.dashboard-link',\r\n                content: 'Comienza a usarlo ahora!'\r\n            }\r\n            ]\r\n        };\r\n        this.cookies = new Cookies();\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid\">\r\n                {\r\n                    this.cookies.get('hasPassedOnboarding') == undefined ?\r\n                        <ReactJoyride\r\n                            run={true}\r\n                            steps={this.state.steps}\r\n                            position={'right'}\r\n                            styles={{\r\n                                options: {\r\n                                    zIndex: 5000\r\n                                }\r\n                            }}\r\n                            continuous={true}\r\n                        /> :\r\n                        ''\r\n                }\r\n                <ChartInfo name=\"Ventas por año\" />\r\n                <ChartInfo name=\"Ventas por mes\" />\r\n                <ChartInfo name=\"Ventas por usuario\" />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","D:\\Documentos\\UNI\\9no semestre\\PROGRAMACION MULTIMEDIA\\Proyecto\\PCHMayoreo-makeover\\dashboard\\src\\components\\DetailViews\\Usuario.js",["161","162","163","164","165","166","167","168","169","170","171","172","173","174"],"import React, { Component } from 'react'\r\nimport $ from 'jquery'\r\nimport {\r\n    FaPlus,\r\n    FaEdit,\r\n    FaTrash\r\n} from 'react-icons/fa'\r\nimport DetailviewHeader from '../Singles/DetailviewHeader';\r\n\r\nexport default class Usuario extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            idUsuario: this.props.match.params.id != undefined ? this.props.match.params.id : '',\r\n            Nombre: '',\r\n            RFC: '',\r\n            Correo: '',\r\n            Password: '',\r\n            Direccion: '',\r\n            Telefono: '',\r\n            Rol: '0',\r\n            Estado: '0',\r\n            Sucursal: '0',\r\n            Roles: [],\r\n            InformacionContacto: {\r\n                id: '',\r\n                Nombre: '',\r\n                Puesto: '',\r\n                Direccion: '',\r\n                Email: '',\r\n                Telefono: '',\r\n                TelefonoMovil: ''\r\n            },\r\n            Sucursales: [],\r\n            Estados: [],\r\n            isCreating: this.props.isCreating != undefined ? this.props.isCreating : false,\r\n            isEditing: this.props.isEditing != undefined ? this.props.isEditing : false\r\n        }\r\n\r\n        this.fileInputRef = React.createRef();\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleInput = this.handleInput.bind(this);\r\n        this.handleCheck = this.handleCheck.bind(this);\r\n        this.handleDelete = this.handleDelete.bind(this);\r\n        this.handleEdit = this.handleEdit.bind(this);\r\n        this.resetState = this.resetState.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        $.ajax({\r\n            method: 'GET',\r\n            url: 'http://localhost:8000/api/sucursal/',\r\n            dataType: 'json',\r\n            success: function (response) {\r\n                this.setState({ Sucursales: [...response] });\r\n            }.bind(this),\r\n            fail: function (error) {\r\n                console.log(error);\r\n            }.bind(this)\r\n        });\r\n \r\n        $.ajax({\r\n            method: 'GET',\r\n            url: 'http://localhost:8000/api/estado/',\r\n            dataType: 'json',\r\n            success: function (response) {\r\n                this.setState({ Estados: [...response] }, ()=> console.log(this.state))\r\n            }.bind(this),\r\n            fail: function (error) {\r\n                console.log(error);\r\n            }.bind(this)\r\n        });\r\n        $.ajax({\r\n            method: 'GET',\r\n            url: 'http://localhost:8000/api/rol/',\r\n            dataType: 'json',\r\n            success: function (response) {\r\n                this.setState({ Roles: [...response] }, ()=> console.log(this.state))\r\n            }.bind(this),\r\n            fail: function (error) {\r\n                console.log(error);\r\n            }.bind(this)\r\n        });\r\n        if (this.state.idUsuario != '') {\r\n            $.ajax({\r\n                url: `http://localhost:8000/api/usuario/${this.state.idUsuario}`,\r\n                method: 'GET',\r\n                dataType: 'json',\r\n                success: function (response) {\r\n                    this.setState({ InformacionContacto: response }, () => {\r\n                        console.log(response);\r\n                    });\r\n                }.bind(this),\r\n                error: function (response) {\r\n                    console.log(response);\r\n                }.bind(this)\r\n            });\r\n        }\r\n    }\r\n\r\n    resetState() {\r\n        if (this.state.isCreating) {\r\n            this.setState({\r\n                articuloid: '',\r\n                Nombre: '',\r\n                RFC: '',\r\n                Correo: '',\r\n                Password: '',\r\n                Direccion: '',\r\n                Rol: '0',\r\n                Estado: '0',\r\n                Sucursal: '0',\r\n                isEditing: false\r\n            });\r\n        }\r\n        if (this.state.isEditing) {\r\n            this.setState({ isEditing: false });\r\n        }\r\n    }\r\n\r\n    handleSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        const dataObject = {\r\n            idusuario: this.state.idusuario != '' ? this.state.usuario : '',\r\n            nombre: this.state.Nombre,\r\n            rfc: this.state.RFC,\r\n            direccion: this.state.Direccion,\r\n            telefono: this.state.Telefono,\r\n            correo: this.state.Correo,\r\n            rolid: this.state.Rol,\r\n            estadoid: this.state.Estado,\r\n            sucursalid: this.state.Sucursal,\r\n            infoContacto: {\r\n                id: this.state.InformacionContacto.id,\r\n                nombre: this.state.InformacionContacto.Nombre,\r\n                puesto: this.state.InformacionContacto.Puesto,\r\n                direccion: this.state.InformacionContacto.Direccion,\r\n                email: this.state.InformacionContacto.Email,\r\n                telefono: this.state.InformacionContacto.Telefono,\r\n                telefonoMovil: this.state.InformacionContacto.TelefonoMovil\r\n            }\r\n        };\r\n\r\n        let requestMethod = !this.state.isEditing ?\r\n            'POST' :\r\n            'PUT';\r\n\r\n        $.ajax({\r\n            method: requestMethod,\r\n            url: 'http://localhost:8000/api/usuario',\r\n            contentType: 'application/json',\r\n            dataType: 'json',\r\n            data: dataObject,\r\n            success: function (response) {\r\n                console.log(response);\r\n                this.resetState();\r\n            }.bind(this),\r\n            fail: function (error) {\r\n                console.log(error);\r\n            }.bind(this)\r\n        });\r\n    }\r\n\r\n    handleEdit(value) {\r\n        this.setState({ isEditing: true });\r\n    }\r\n\r\n    handleDelete(value) {\r\n        $.ajax({\r\n            method: 'POST',\r\n            url: 'http://localhost:8000/api/usuario/delete',\r\n            data: JSON.stringify({ id: value }),\r\n            contentType: 'application/json',\r\n            dataType: 'json',\r\n            success: function (response) {\r\n                this.getusuarios();\r\n            }.bind(this),\r\n            fail: function (error) {\r\n                console.log(error);\r\n            }.bind(this)\r\n        });\r\n    }\r\n\r\n    handleInput(e) {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    }\r\n\r\n    handleCheck(e) {\r\n        this.setState({ Activo: e.target.checked });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid\">\r\n                <DetailviewHeader\r\n                    Name=\"Usuario\"\r\n                    Value={this.state.Nombre}\r\n                    ListViewPath='/usuarios'\r\n                    isEditing={this.state.isEditing}\r\n                    isCreating={this.state.isCreating}\r\n                />\r\n                <form onSubmit={this.handleSubmit} className=\"w-100 mb-4\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-sm-12 col-md-6\">\r\n                            <h4>Información del usuario</h4>\r\n                            <hr />\r\n                            <input type=\"hidden\" name=\"id\" value={this.state.idMarca} />\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"nombreInput\">\r\n                                    Nombre\r\n                                </label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    id=\"nombreInput\"\r\n                                    name=\"Nombre\"\r\n                                    className=\"form-control\"\r\n                                    placeholder=\"Nombre\"\r\n                                    onChange={this.handleInput}\r\n                                    value={this.state.Nombre} />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"RFCInput\">\r\n                                    RFC\r\n                                </label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    id=\"RFCInput\"\r\n                                    name=\"RFC\"\r\n                                    className=\"form-control\"\r\n                                    placeholder=\"RFC\"\r\n                                    onChange={this.handleInput}\r\n                                    value={this.state.RFC} />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"correoInput\">\r\n                                    Correo\r\n                                </label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    id=\"correoInput\"\r\n                                    name=\"Correo\"\r\n                                    className=\"form-control\"\r\n                                    placeholder=\"Correo\"\r\n                                    onChange={this.handleInput}\r\n                                    value={this.state.Correo} />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"direccionInput\">\r\n                                    Dirección\r\n                                </label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    name=\"Direccion\"\r\n                                    id=\"direccionInput\"\r\n                                    className=\"form-control\"\r\n                                    value={this.state.Direccion}\r\n                                    onChange={this.handleInput}\r\n                                    placeholder=\"Direccion\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"telefonoInput\">\r\n                                    Telefono\r\n                                </label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    name=\"Telefono\"\r\n                                    id=\"telefonoInput\"\r\n                                    className=\"form-control\"\r\n                                    value={this.state.Telefono}\r\n                                    onChange={this.handleInput}\r\n                                    placeholder=\"Telefono\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"rolInput\">\r\n                                    Rol\r\n                                </label>\r\n                                <div className=\"input-group\">\r\n                                    <select\r\n                                        name=\"Rol\"\r\n                                        id=\"rolInput\"\r\n                                        className=\"custom-select\"\r\n                                        value={this.state.Rol}\r\n                                        onChange={this.handleInput}>\r\n                                        <option value=\"0\">{\"-- Sleecione un opcion --\"}</option>\r\n                                        {\r\n                                            this.state.Roles &&\r\n                                            this.state.Roles.map((rol, index) => {\r\n                                                return <option value={rol.id} key={index}>{rol.Nombre}</option>\r\n                                            })\r\n                                        }\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"estadoInput\">\r\n                                    Estado\r\n                                </label>\r\n                                <div className=\"input-group\">\r\n                                    <select\r\n                                        name=\"Estado\"\r\n                                        id=\"estadoInput\"\r\n                                        className=\"custom-select\"\r\n                                        value={this.state.Estado}\r\n                                        onChange={this.handleInput}>\r\n                                        <option value=\"0\">{\"-- Sleecione un opcion --\"}</option>\r\n                                        {\r\n                                            this.state.Estados &&\r\n                                            this.state.Estados.map((estado, index) => {\r\n                                                return <option value={estado.id} key={index}>{estado.Nombre}</option>\r\n                                            })\r\n                                        }\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"sucursalInput\">\r\n                                    Sucursal\r\n                                </label>\r\n                                <div className=\"input-group\">\r\n                                    <select\r\n                                        name=\"Sucursal\"\r\n                                        id=\"sucursalInput\"\r\n                                        className=\"custom-select\"\r\n                                        value={this.state.Sucursal}\r\n                                        onChange={this.handleInput}>\r\n                                        <option value=\"0\">{\"-- Sleecione un opcion --\"}</option>\r\n                                        {\r\n                                            this.state.Sucursales &&\r\n                                            this.state.Sucursales.map((sucursal, index) => {\r\n                                                return <option value={sucursal.id} key={index}>{sucursal.Nombre}</option>\r\n                                            })\r\n                                        }\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                            <h4>Informacion de contacto</h4>\r\n                            <hr />\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"ColorInput\">\r\n                                    Nombre\r\n                                </label>\r\n                                <input type=\"text\"\r\n                                    id=\"colorInput\"\r\n                                    name=\"InformacionContacto.Nombre\"\r\n                                    className=\"form-control\"\r\n                                    placeholder=\"Nombre de contacto\"\r\n                                    onChange={this.handleInput}\r\n                                    value={this.state.InformacionContacto.Nombre} />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"TecnologiaInput\">\r\n                                    Puesto\r\n                                </label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    id=\"nombreInput\"\r\n                                    name=\"InformacionContacto.Puesto\"\r\n                                    className=\"form-control\"\r\n                                    placeholder=\"Puesto del contacto\"\r\n                                    onChange={this.handleInput}\r\n                                    value={this.state.InformacionContacto.Puesto}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"TecnologiaInput\">\r\n                                    Dirección\r\n                                </label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    id=\"nombreInput\"\r\n                                    name=\"InformacionContacto.Direccion\"\r\n                                    className=\"form-control\"\r\n                                    placeholder=\"Dirección del contacto\"\r\n                                    onChange={this.handleInput}\r\n                                    value={this.state.InformacionContacto.Direccion}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"TecnologiaInput\">\r\n                                    Email\r\n                                </label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    id=\"nombreInput\"\r\n                                    name=\"InformacionContacto.Email\"\r\n                                    className=\"form-control\"\r\n                                    placeholder=\"Correo del contacto\"\r\n                                    onChange={this.handleInput}\r\n                                    value={this.state.InformacionContacto.Email}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"TecnologiaInput\">\r\n                                    Telefono\r\n                                </label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    id=\"nombreInput\"\r\n                                    name=\"InformacionContacto.Telefono\"\r\n                                    className=\"form-control\"\r\n                                    placeholder=\"Telefono del contacto\"\r\n                                    onChange={this.handleInput}\r\n                                    value={this.state.InformacionContacto.Telefono}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"TecnologiaInput\">\r\n                                    Telefono movil\r\n                                </label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    id=\"nombreInput\"\r\n                                    name=\"InformacionContacto.TelefonoMovil\"\r\n                                    className=\"form-control\"\r\n                                    placeholder=\"Telefono movil del contacto\"\r\n                                    onChange={this.handleInput}\r\n                                    value={this.state.InformacionContacto.TelefonoMovil}\r\n                                />\r\n                            </div>\r\n                            {\r\n                                (this.state.isCreating || this.state.isEditing) ?\r\n                                    <React.Fragment>\r\n                                        <button\r\n                                            type=\"submit\"\r\n                                            className=\"button button-danger\"\r\n                                            onClick={() => this.resetState()}>Cancelar</button>\r\n                                        <button type=\"submit\" className=\"button button-edit\">Guardar</button>\r\n                                    </React.Fragment>\r\n                                    : null\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","D:\\Documentos\\UNI\\9no semestre\\PROGRAMACION MULTIMEDIA\\Proyecto\\PCHMayoreo-makeover\\dashboard\\src\\components\\DetailViews\\Marca.js",["175","176","177","178","179","180","181","182","183","184"],"D:\\Documentos\\UNI\\9no semestre\\PROGRAMACION MULTIMEDIA\\Proyecto\\PCHMayoreo-makeover\\dashboard\\src\\components\\DetailViews\\Estado.js",["185","186","187","188","189","190","191","192","193","194","195","196","197","198"],"import React, { Component } from 'react'\r\nimport $ from 'jquery';\r\n\r\nimport { FaEdit, FaTrash, FaPlus } from 'react-icons/fa';\r\nimport DetailviewHeader from '../Singles/DetailviewHeader';\r\n\r\nexport default class Estado extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            idEstado: this.props.match.params.id != undefined ? this.props.match.params.id : '',\r\n            Nombre: '',\r\n            Capital: '',\r\n            Clave: '',\r\n            SucursalDefault: '0',\r\n            Sucursales: [],\r\n            isCreating: this.props.isCreating != undefined ? this.props.isCreating : false,\r\n            isEditing: this.props.isEditing != undefined ? this.props.isEditing : false,\r\n        }\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleInput = this.handleInput.bind(this);\r\n        this.handleDelete = this.handleDelete.bind(this);\r\n        this.handleEdit = this.handleEdit.bind(this);\r\n        this.resetState = this.resetState.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.state.idEstado != '') {\r\n            $.ajax({\r\n                method: 'GET',\r\n                url: `https://pchproject-api.herokuapp.com/api/estado/${this.state.idEstado}`,\r\n                dataType: 'json',\r\n                success: function (response) {\r\n                    this.setState({\r\n                        Nombre: response.Nombre,\r\n                        Capital: response.Capital,\r\n                        Clave: response.Clave,\r\n                        SucursalDefault: response.SucursalDefault,\r\n                        Estado: response.Estado != undefined ? response.Estado : '0'\r\n                    })\r\n                }.bind(this),\r\n                fail: function (error) {\r\n                    console.log(error);\r\n                }.bind(this)\r\n            });\r\n        }\r\n\r\n        $.ajax({\r\n            method: 'GET',\r\n            url: 'https://pchproject-api.herokuapp.com/api/sucursal/',\r\n            dataType: 'json',\r\n            success: function (response) {\r\n                this.setState({ Sucursales: [...response] })\r\n            }.bind(this),\r\n            fail: function (error) {\r\n                console.log(error);\r\n            }.bind(this)\r\n        });\r\n    }\r\n\r\n    resetState() {\r\n        if (this.state.isEditing) {\r\n            this.setState({ isEditing: false });\r\n        }\r\n        if (this.state.isCreating) {\r\n            this.setState({\r\n                Clave: '',\r\n                Nombre: '',\r\n                Capital: '',\r\n                isEstado: '',\r\n                SucursalDefault: '0',\r\n                isEditing: false\r\n            });\r\n        }\r\n    }\r\n\r\n    handleSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        let dataObject = {\r\n            estadoid: this.state.idEstado != '' ? this.state.idEstado : '',\r\n            nombre: this.state.Nombre,\r\n            capital: this.state.Capital,\r\n            clave: this.state.Clave,\r\n            sucursal: this.state.SucursalDefault != \"0\" ? this.state.SucursalDefault : ''\r\n        };\r\n        console.log(dataObject);\r\n        let requestMethod = !this.state.isEditing ?\r\n            'POST' :\r\n            'PUT';\r\n\r\n        $.ajax({\r\n            method: requestMethod,\r\n            url: 'https://pchproject-api.herokuapp.com/api/estado',\r\n            contentType: 'application/json',\r\n            dataType: 'json',\r\n            data: JSON.stringify(dataObject),\r\n            success: function (response) {\r\n                console.log(response);\r\n                this.resetState();\r\n            }.bind(this),\r\n            fail: function (error) {\r\n                console.log(error);\r\n            }.bind(this)\r\n        });\r\n    }\r\n\r\n    handleEdit(value) {\r\n        this.setState({ isEditing: true });\r\n    }\r\n\r\n    handleDelete(value) {\r\n        $.ajax({\r\n            method: 'POST',\r\n            url: 'http://localhost:8001/api/estado/delete',\r\n            data: JSON.stringify({ id: value }),\r\n            contentType: 'application/json',\r\n            dataType: 'json',\r\n            success: function (response) {\r\n                this.getEstados();\r\n            }.bind(this),\r\n            fail: function (error) {\r\n                console.log(error);\r\n            }.bind(this)\r\n        });\r\n    }\r\n\r\n    handleInput(e) {\r\n        this.setState({ [e.target.name]: e.target.value }, () => {\r\n            console.log(this.state.SucursalDefault)\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <DetailviewHeader\r\n                    Name=\"Estado\"\r\n                    Value={this.state.Clave}\r\n                    ListViewPath='/estados'\r\n                    isEditing={this.state.isEditing}\r\n                    isCreating={this.state.isCreating}\r\n                    handleEdit={this.handleEdit}\r\n                    handleDelete={this.handleDelete}\r\n                />\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <fieldset disabled={!(this.state.isEditing || this.state.isCreating)}>\r\n                        <input type=\"hidden\" name=\"id\" value={this.state.idEstado} />\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"UbicacionInput\">\r\n                                Clave\r\n                            </label>\r\n                            <input type=\"text\"\r\n                                id=\"ClaveInput\"\r\n                                name=\"Clave\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Clave\"\r\n                                onChange={this.handleInput}\r\n                                value={this.state.Clave} />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"nombreInput\">\r\n                                Nombre del estado\r\n                            </label>\r\n                            <input type=\"text\"\r\n                                id=\"nombreInput\"\r\n                                name=\"Nombre\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Nombre\"\r\n                                onChange={this.handleInput}\r\n                                value={this.state.Nombre} />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"CapitalInput\">\r\n                                Capital del estado\r\n                        </label>\r\n                            <input type=\"text\"\r\n                                id=\"CapitalInput\"\r\n                                name=\"Capital\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Capital\"\r\n                                onChange={this.handleInput}\r\n                                value={this.state.Capital} />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"SucursalInput\">\r\n                                Sucursal default\r\n                        </label>\r\n                            <select\r\n                                name=\"SucursalDefault\"\r\n                                id=\"SucursalInput\"\r\n                                className=\"form-control\"\r\n                                value={this.state.SucursalDefault}\r\n                                onChange={this.handleInput}>\r\n                                <option value=\"0\">{\"--- Seleccione alguna sucursal ---\"}</option>\r\n                                {\r\n                                    this.state.Sucursales !== undefined &&\r\n                                    this.state.Sucursales.map((sucursal, index) => {\r\n                                        return <option value={sucursal.id} key={index}>{sucursal.Clave}</option>;\r\n                                    })\r\n                                }\r\n                            </select>\r\n                        </div>\r\n                        {\r\n                            (this.state.isEditing || this.state.isCreating) &&\r\n                            <React.Fragment>\r\n                                <button\r\n                                    type=\"submit\"\r\n                                    className=\"button button-danger\"\r\n                                    onClick={() => this.resetState()}>Cancelar</button>\r\n                                <button type=\"submit\" className=\"button button-edit\">Guardar</button>\r\n                            </React.Fragment>\r\n                        }\r\n                    </fieldset>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","D:\\Documentos\\UNI\\9no semestre\\PROGRAMACION MULTIMEDIA\\Proyecto\\PCHMayoreo-makeover\\dashboard\\src\\components\\DetailViews\\Venta.js",["199","200"],"import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport $ from 'jquery'\r\n\r\nimport DetailviewHeader from '../Singles/DetailviewHeader'\r\n\r\nexport default class Venta extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            ventaid: '',\r\n            Folio: '',\r\n            Usuario: '',\r\n            MetodoEnvio: '',\r\n            MetodoPago: '',\r\n            DireccionEnvio: '',\r\n            Total: '',\r\n            Estatus: ''\r\n        };\r\n\r\n    }\r\n    componentDidMount(){\r\n        $.ajax({\r\n            url: 'http://localhost:8000/api/venta',\r\n            method: 'GET',\r\n            dataType: 'json',\r\n            success: function (response) {\r\n                this.setState({Ventas: [...response]});\r\n            }.bind(this),\r\n            error: function (response) {\r\n                console.log(response);\r\n            }.bind(this)\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid\">\r\n                <DetailviewHeader\r\n                    Name=\"Venta\"\r\n                    Value={this.state.Folio}\r\n                    ListViewPath=\"/inventarios\"\r\n                    handleDelete={this.handleDelete}\r\n                    handleEdit={this.handleEdit}\r\n                    isEditing={this.state.isEditing}\r\n                    isCreating={this.state.isCreating}\r\n                />\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <fieldset disabled={!(this.state.isCreating || this.state.isEditing)}>\r\n                        <input type=\"hidden\" name=\"id\" value={this.state.idInventario} />\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"nombreInput\">\r\n                                Folio\r\n                        </label>\r\n                            <input type=\"text\"\r\n                                id=\"nombreInput\"\r\n                                name=\"Folio\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Clave\"\r\n                                onChange={this.handleInput}\r\n                                value={this.state.Clave} />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"SucursalInput\">\r\n                                Sucursal\r\n                        </label>\r\n                            <select\r\n                                name=\"Sucursal\"\r\n                                id=\"SucursalInput\"\r\n                                className=\"form-control\"\r\n                                value={this.state.Sucursal}\r\n                                onChange={this.handleInput}>\r\n                                <option value=\"0\">{\"--- Seleccione alguna sucursal ---\"}</option>\r\n                                {\r\n                                    this.state.Sucursales !== undefined &&\r\n                                    this.state.Sucursales.map((sucursal, index) => {\r\n                                        return <option value={sucursal.id} key={index}>{sucursal.Clave}</option>;\r\n                                    })\r\n                                }\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"SucursalInput\">\r\n                                Articulo\r\n                        </label>\r\n                            <select\r\n                                name=\"Articulo\"\r\n                                id=\"SucursalInput\"\r\n                                className=\"form-control\"\r\n                                value={this.state.Articulo}\r\n                                onChange={this.handleInput}>\r\n                                <option value=\"0\">{\"--- Seleccione alguna sucursal ---\"}</option>\r\n                                {\r\n                                    this.state.Articulos !== undefined &&\r\n                                    this.state.Articulos.map((articulo, index) => {\r\n                                        return <option value={articulo.id} key={index}>{articulo.SKU}</option>;\r\n                                    })\r\n                                }\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"UbicacionInput\">\r\n                                Total\r\n                        </label>\r\n                            <input type=\"number\"\r\n                                id=\"ClaveInput\"\r\n                                name=\"Cantidad\"\r\n                                className=\"form-control\"\r\n                                min=\"0\"\r\n                                max=\"99999999\"\r\n                                placeholder=\"Cantidad\"\r\n                                onChange={this.handleInput}\r\n                                value={this.state.Total} />\r\n                        </div>\r\n                        {\r\n                            (this.state.isCreating || this.state.isEditing) &&\r\n                            <React.Fragment>\r\n                                <button\r\n                                    type=\"submit\"\r\n                                    className=\"button button-danger\"\r\n                                    onClick={() => this.resetState()}>Cancelar</button>\r\n                                <button type=\"submit\" className=\"button button-edit\">Guardar</button>\r\n                            </React.Fragment>\r\n                        }\r\n                    </fieldset>\r\n                </form>\r\n                <div className=\"table-container\">\r\n                    <h3>Detalles</h3>\r\n                    <hr />\r\n                    <table className=\"table table-hover\">\r\n                        <thead>\r\n                            <th scope=\"col\">SKU</th>\r\n                            <th scope=\"col\">Cantidad</th>\r\n                            <th scope=\"col\">Monto</th>\r\n                            <th scope=\"col\">Fecha</th>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                this.state.Detalles.length > 0 &&\r\n                                this.state.Detalles.map((detalle, index) => {\r\n                                    return (\r\n                                        <tr key={index}>\r\n                                            <td>{detalle.Cantidad}</td>\r\n                                            <td>{detalle.Tipo}</td>\r\n                                            <td>{new Date(detalle.created_at).toLocaleString(\"es-MX\")}</td>\r\n                                        </tr>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","D:\\Documentos\\UNI\\9no semestre\\PROGRAMACION MULTIMEDIA\\Proyecto\\PCHMayoreo-makeover\\dashboard\\src\\components\\DetailViews\\Inventario.js",["201","202","203","204","205","206","207","208","209","210","211","212","213","214","215","216","217"],"import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport $ from 'jquery';\r\n\r\nimport { FaEdit, FaTrash, FaExpandAlt, FaPlus } from 'react-icons/fa';\r\nimport DetailviewHeader from '../Singles/DetailviewHeader';\r\n\r\nexport default class Inventario extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            idInventario: this.props.match.params.id != undefined ? this.props.match.params.id : '',\r\n            Clave: '',\r\n            Articulo: '',\r\n            Sucursal: '',\r\n            Cantidad: 0,\r\n            Detalles: [],\r\n            Articulos: [],\r\n            Sucursales: [],\r\n            isEditing: this.props.isEditing != undefined ? this.props.isEditing : false,\r\n            isCreating: this.props.isCreating != undefined ? this.props.isCreating : false\r\n        }\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleInput = this.handleInput.bind(this);\r\n        this.handleDelete = this.handleDelete.bind(this);\r\n        this.handleEdit = this.handleEdit.bind(this);\r\n        this.resetState = this.resetState.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        $.ajax({\r\n            method: 'GET',\r\n            url: 'https://pchproject-api.herokuapp.com/api/articulo/',\r\n            dataType: 'json',\r\n            success: function (response) {\r\n                this.setState({ Articulos: [...response] }, () => {\r\n                    console.log(response)\r\n                })\r\n            }.bind(this),\r\n            fail: function (error) {\r\n                console.log(error);\r\n            }.bind(this)\r\n        });\r\n        $.ajax({\r\n            method: 'GET',\r\n            url: 'https://pchproject-api.herokuapp.com/api/sucursal/',\r\n            dataType: 'json',\r\n            success: function (response) {\r\n                this.setState({ Sucursales: [...response] }, () => {\r\n                    console.log(response)\r\n                })\r\n            }.bind(this),\r\n            fail: function (error) {\r\n                console.log(error);\r\n            }.bind(this)\r\n        });\r\n        if (this.state.idInventario != '') {\r\n            $.ajax({\r\n                method: 'GET',\r\n                url: `https://pchproject-api.herokuapp.com/api/inventario/${this.state.idInventario}`,\r\n                dataType: 'json',\r\n                success: function (response) {\r\n                    this.setState({\r\n                        Clave: response.Clave,\r\n                        Articulo: response.articulo_id,\r\n                        Sucursal: response.sucursal_id,\r\n                        Cantidad: response.Cantidad,\r\n                        Detalles: [...response.detalles]\r\n                    }, () => console.log(this.state));\r\n                }.bind(this),\r\n                fail: function (error) {\r\n                    console.log(error);\r\n                }.bind(this)\r\n            });\r\n        }\r\n    }\r\n\r\n    resetState() {\r\n        if (this.state.isEditing) {\r\n            this.setState({ isEditing: false });\r\n        }\r\n        else {\r\n            this.setState({\r\n                Clave: '',\r\n                Sucursal: '',\r\n                Articulo: '',\r\n                Cantidad: '',\r\n                idInventario: '',\r\n                isEditing: false\r\n            });\r\n        }\r\n    }\r\n\r\n    handleSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        let dataObject = {\r\n            inventarioid: this.state.idInventario != '' ? this.state.idInventario : '',\r\n            clave: this.state.Clave,\r\n            sucursal: this.state.Sucursal != \"0\" ? this.state.Sucursal : '',\r\n            articulo: this.state.Articulo != \"0\" ? this.state.Articulo : '',\r\n            cantidad: this.state.Cantidad\r\n        };\r\n        console.log(dataObject);\r\n        let requestMethod = !this.state.isEditing ?\r\n            'POST' :\r\n            'PUT';\r\n\r\n        $.ajax({\r\n            method: requestMethod,\r\n            url: 'https://pchproject-api.herokuapp.com/api/inventario',\r\n            contentType: 'application/json',\r\n            dataType: 'json',\r\n            data: JSON.stringify(dataObject),\r\n            success: function (response) {\r\n                this.resetState();\r\n                console.log(response);\r\n            }.bind(this),\r\n            fail: function (error) {\r\n                console.log(error);\r\n            }.bind(this)\r\n        });\r\n    }\r\n\r\n    handleEdit(value) {\r\n        this.setState({ isEditing: true })\r\n    }\r\n\r\n    handleDelete(value) {\r\n        $.ajax({\r\n            method: 'POST',\r\n            url: 'https://pchproject-api.herokuapp.com/api/inventario/delete',\r\n            data: JSON.stringify({ id: value }),\r\n            contentType: 'application/json',\r\n            dataType: 'json',\r\n            success: function (response) {\r\n                this.getInventarios();\r\n            }.bind(this),\r\n            fail: function (error) {\r\n                console.log(error);\r\n            }.bind(this)\r\n        });\r\n    }\r\n\r\n    handleInput(e) {\r\n        this.setState({ [e.target.name]: e.target.value }, () => {\r\n            console.log(this.state.SucursalDefault)\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid\">\r\n                <DetailviewHeader\r\n                    Name=\"Inventario\"\r\n                    Value={this.state.Clave}\r\n                    ListViewPath=\"/inventarios\"\r\n                    handleDelete={this.handleDelete}\r\n                    handleEdit={this.handleEdit}\r\n                    isEditing={this.state.isEditing}\r\n                    isCreating={this.state.isCreating}\r\n                />\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <fieldset disabled={!(this.state.isCreating || this.state.isEditing)}>\r\n                        <input type=\"hidden\" name=\"id\" value={this.state.idInventario} />\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"nombreInput\">\r\n                                Clave del inventario\r\n                        </label>\r\n                            <input type=\"text\"\r\n                                id=\"nombreInput\"\r\n                                name=\"Clave\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Clave\"\r\n                                onChange={this.handleInput}\r\n                                value={this.state.Clave} />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"SucursalInput\">\r\n                                Sucursal\r\n                        </label>\r\n                            <select\r\n                                name=\"Sucursal\"\r\n                                id=\"SucursalInput\"\r\n                                className=\"form-control\"\r\n                                value={this.state.Sucursal}\r\n                                onChange={this.handleInput}>\r\n                                <option value=\"0\">{\"--- Seleccione alguna sucursal ---\"}</option>\r\n                                {\r\n                                    this.state.Sucursales !== undefined &&\r\n                                    this.state.Sucursales.map((sucursal, index) => {\r\n                                        return <option value={sucursal.id} key={index}>{sucursal.Clave}</option>;\r\n                                    })\r\n                                }\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"SucursalInput\">\r\n                                Articulo\r\n                        </label>\r\n                            <select\r\n                                name=\"Articulo\"\r\n                                id=\"SucursalInput\"\r\n                                className=\"form-control\"\r\n                                value={this.state.Articulo}\r\n                                onChange={this.handleInput}>\r\n                                <option value=\"0\">{\"--- Seleccione alguna sucursal ---\"}</option>\r\n                                {\r\n                                    this.state.Articulos !== undefined &&\r\n                                    this.state.Articulos.map((articulo, index) => {\r\n                                        return <option value={articulo.id} key={index}>{articulo.SKU}</option>;\r\n                                    })\r\n                                }\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"UbicacionInput\">\r\n                                Cantidad\r\n                        </label>\r\n                            <input type=\"number\"\r\n                                id=\"ClaveInput\"\r\n                                name=\"Cantidad\"\r\n                                className=\"form-control\"\r\n                                min=\"0\"\r\n                                max=\"99999999\"\r\n                                placeholder=\"Cantidad\"\r\n                                onChange={this.handleInput}\r\n                                value={this.state.Cantidad} />\r\n                        </div>\r\n                        {\r\n                            (this.state.isCreating || this.state.isEditing) &&\r\n                            <React.Fragment>\r\n                                <button\r\n                                    type=\"submit\"\r\n                                    className=\"button button-danger\"\r\n                                    onClick={() => this.resetState()}>Cancelar</button>\r\n                                <button type=\"submit\" className=\"button button-edit\">Guardar</button>\r\n                            </React.Fragment>\r\n                        }\r\n                    </fieldset>\r\n                </form>\r\n                <div className=\"table-container\">\r\n                    <h3>Detalles</h3>\r\n                    <hr />\r\n                    <table className=\"table table-hover\">\r\n                        <thead>\r\n                            <th scope=\"col\">Cantidad</th>\r\n                            <th scope=\"col\">Tipo</th>\r\n                            <th scope=\"col\">Fecha</th>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                this.state.Detalles.length > 0 &&\r\n                                this.state.Detalles.map((detalle, index) => {\r\n                                    return (\r\n                                        <tr key={index}>\r\n                                            <td>{detalle.Cantidad}</td>\r\n                                            <td>{detalle.Tipo}</td>\r\n                                            <td>{new Date(detalle.created_at).toLocaleString(\"es-MX\")}</td>\r\n                                        </tr>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","D:\\Documentos\\UNI\\9no semestre\\PROGRAMACION MULTIMEDIA\\Proyecto\\PCHMayoreo-makeover\\dashboard\\src\\components\\DetailViews\\Sucursal.js",["218","219","220","221","222","223","224","225","226","227","228","229","230","231","232","233","234","235"],"D:\\Documentos\\UNI\\9no semestre\\PROGRAMACION MULTIMEDIA\\Proyecto\\PCHMayoreo-makeover\\dashboard\\src\\components\\ListViews\\Sucursales.js",["236","237","238"],"D:\\Documentos\\UNI\\9no semestre\\PROGRAMACION MULTIMEDIA\\Proyecto\\PCHMayoreo-makeover\\dashboard\\src\\components\\ListViews\\Estados.js",["239","240","241"],"D:\\Documentos\\UNI\\9no semestre\\PROGRAMACION MULTIMEDIA\\Proyecto\\PCHMayoreo-makeover\\dashboard\\src\\components\\ListViews\\Categorias.js",["242"],"D:\\Documentos\\UNI\\9no semestre\\PROGRAMACION MULTIMEDIA\\Proyecto\\PCHMayoreo-makeover\\dashboard\\src\\components\\ListViews\\Ventas.js",["243","244"],"import React, { Component } from 'react'\r\nimport $ from 'jquery';\r\n\r\nimport { FaEdit, FaTrash, FaExpandAlt } from 'react-icons/fa';\r\n\r\nexport default class Ventas extends Component {\r\n    constructor(props){\r\n        super(props);\r\n         \r\n        this.state = {\r\n            Ventas: []\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        $.ajax({\r\n            url: 'https://pchproject-api.herokuapp.com/api/venta',\r\n            method: 'GET',\r\n            type: 'json',\r\n            success: function (response) {\r\n                this.setState({Ventas: [...response]});\r\n            }.bind(this),\r\n            error: function (reponse) {\r\n                console.log(reponse)\r\n            }.bind(this)\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid\">\r\n                <h4>Ventas</h4>\r\n                <br/>\r\n                <hr/>\r\n                <div className=\"table-container\">\r\n                <table className=\"table table-hover\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th scope=\"col\">Folio</th>\r\n                                <th scope=\"col\">Fecha</th>\r\n                                <th scope=\"col\">Usuario</th>\r\n                                <th scope=\"col\">Sucursal</th>\r\n                                <th scope=\"col\">Total</th>\r\n                                <th scope=\"col\">Acción</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                this.state.Ventas !== undefined &&\r\n                                this.state.Ventas.map((venta, index) => {\r\n                                    return (\r\n                                        <tr key={index}>\r\n                                            <td>{venta.Clave}</td>\r\n                                            <td>{venta.Nombre}</td>\r\n                                            <td>{venta.Peso}</td>\r\n                                            <td>\r\n                                                <button\r\n                                                    type=\"button\"\r\n                                                    className=\"button button-edit\"\r\n                                                    onClick={() => this.handleEdit(venta._id)}>\r\n                                                    <FaEdit style={{ verticalAlign: 'baseline' }} />\r\n                                                </button>\r\n                                                <button\r\n                                                    type=\"button\"\r\n                                                    className=\"button button-danger\"\r\n                                                    onClick={() => this.handleDelete(venta._id)}>\r\n                                                    <FaTrash style={{ verticalAlign: 'baseline' }} />\r\n                                                </button>\r\n                                            </td>\r\n                                        </tr>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","D:\\Documentos\\UNI\\9no semestre\\PROGRAMACION MULTIMEDIA\\Proyecto\\PCHMayoreo-makeover\\dashboard\\src\\components\\ListViews\\Marcas.js",["245"],"import React, { Component } from 'react'\r\nimport $ from 'jquery'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default class Marcas extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            Marcas: []\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        $.ajax({\r\n            url: 'https://pchproject-api.herokuapp.com/api/marca',\r\n            method: 'GET',\r\n            success: function(response) {\r\n                this.setState({ Marcas: [...response] });\r\n            }.bind(this),\r\n            fail: function(response) {\r\n                console.log(response);\r\n            }.bind(this)\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"table-container container\">\r\n                <Link className=\"btn btn-success mb-4\" to='/marca/create'>Nuevo</Link>\r\n                <table className=\"table table-hover\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th scope=\"col\">Clave</th>\r\n                            <th scope=\"col\">Nombre</th>\r\n                            <th scope=\"col\">Descripcion</th>\r\n                            <th scope=\"col\">Accion</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            this.state.Marcas !== undefined &&\r\n                            this.state.Marcas.map((marca, index) => {\r\n                                return (\r\n                                    <tr key={index}>\r\n                                        <td>{marca.Clave}</td>\r\n                                        <td>{marca.Nombre}</td>\r\n                                        <td>{marca.Descripcion}</td>\r\n                                        <td>\r\n                                            <Link to={`marca/detail/${marca.id}`}>ver</Link>\r\n                                        </td>\r\n                                    </tr>\r\n                                )\r\n                            })\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","D:\\Documentos\\UNI\\9no semestre\\PROGRAMACION MULTIMEDIA\\Proyecto\\PCHMayoreo-makeover\\dashboard\\src\\components\\ListViews\\Usuarios.js",["246"],"D:\\Documentos\\UNI\\9no semestre\\PROGRAMACION MULTIMEDIA\\Proyecto\\PCHMayoreo-makeover\\dashboard\\src\\components\\ListViews\\Inventarios.js",["247"],"import React, { Component } from 'react'\r\nimport $ from 'jquery'\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default class Inventarios extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            Inventarios: []\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        $.ajax({\r\n            method: 'GET',\r\n            url: 'https://pchproject-api.herokuapp.com/api/inventario/',\r\n            dataType: 'json',\r\n            success: function (response) {\r\n                this.setState({ Inventarios: [...response] }, () => {\r\n                    console.log(response)\r\n                })\r\n            }.bind(this),\r\n            fail: function (error) {\r\n                console.log(error);\r\n            }.bind(this)\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"table-container container\">\r\n                <Link className=\"btn btn-success mb-4\" to='/inventario/create'>Nuevo</Link>\r\n                <table className=\"table table-hover\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th scope=\"col\">Clave</th>\r\n                            <th scope=\"col\">Sucursal</th>\r\n                            <th scope=\"col\">Articulo</th>\r\n                            <th scope=\"col\">Cantidad</th>\r\n                            <th scope=\"col\">Acción</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            this.state.Inventarios !== undefined &&\r\n                            this.state.Inventarios.map((inventario, index) => {\r\n                                return (\r\n                                    <tr key={index}>\r\n                                        <td>{inventario.Clave}</td>\r\n                                        <td>{inventario.sucursal.Clave}</td>\r\n                                        <td>{inventario.articulo.SKU}</td>\r\n                                        <td>{inventario.Cantidad}</td>\r\n                                        <td>\r\n                                            <Link to={`/inventario/detail/${inventario.id}`}>\r\n                                                ver\r\n                                            </Link>\r\n                                        </td>\r\n                                    </tr>\r\n                                )\r\n                            })\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","D:\\Documentos\\UNI\\9no semestre\\PROGRAMACION MULTIMEDIA\\Proyecto\\PCHMayoreo-makeover\\dashboard\\src\\components\\ListViews\\Roles.js",["248"],"import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport $ from 'jquery'\r\n\r\nexport default class Roles extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            roles: []\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        $.ajax({\r\n            url: 'https://pchproject-api.herokuapp.com/api/rol',\r\n            method: 'GET',\r\n            dataType: 'json',\r\n            success: function (response) {\r\n                this.setState({roles: [...response]});\r\n            }.bind(this),\r\n            error: function (response) {\r\n                console.log(response);\r\n            }.bind(this)\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"table-container container\">\r\n                <Link to=\"/rol/create\" className=\"btn btn-success mb-4\">Nuevo</Link>\r\n                <table className=\"table table-hover\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th scope=\"col\">Clave</th>\r\n                            <th scope=\"col\">Nombre</th>\r\n                            <th scope=\"col\">Peso</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            this.state.roles !== undefined &&\r\n                            this.state.roles.map((rol, index) => {\r\n                                return (\r\n                                    <tr key={index}>\r\n                                        <td>{rol.Clave}</td>\r\n                                        <td>{rol.Nombre}</td>\r\n                                        <td>{rol.Peso}</td>\r\n                                        <td>\r\n                                            <Link to={`/rol/detail/${rol.id}`}>Ver</Link>\r\n                                        </td>\r\n                                    </tr>\r\n                                )\r\n                            })\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","D:\\Documentos\\UNI\\9no semestre\\PROGRAMACION MULTIMEDIA\\Proyecto\\PCHMayoreo-makeover\\dashboard\\src\\components\\DetailViews\\Rol.js",["249","250","251","252","253","254","255","256","257","258","259","260"],"D:\\Documentos\\UNI\\9no semestre\\PROGRAMACION MULTIMEDIA\\Proyecto\\PCHMayoreo-makeover\\dashboard\\src\\components\\DetailViews\\MetodoEnvio.js",["261","262","263","264","265","266","267","268","269","270","271"],"import React, { Component } from 'react'\r\nimport $ from 'jquery';\r\n\r\nimport { FaEdit, FaTrash, FaPlus } from 'react-icons/fa';\r\nimport DetailviewHeader from '../Singles/DetailviewHeader';\r\n\r\nexport default class MetodoEnvio extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            idMetodoEnvio: this.props.match.params.id != undefined ? this.props.match.params.id : '',\r\n            Clave: '',\r\n            Nombre: '',\r\n            Descripcion: '',\r\n            Cuota: '0',\r\n            isCreating: this.props.isCreating != undefined ? this.props.isCreating : false,\r\n            isEditing: this.props.isEditing != undefined ? this.props.isEditing : false\r\n        }\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleInput = this.handleInput.bind(this);\r\n        this.handleDelete = this.handleDelete.bind(this);\r\n        this.handleEdit = this.handleEdit.bind(this);\r\n        this.resetState = this.resetState.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.state.idMetodoEnvio != '') {\r\n            $.ajax({\r\n                url: `https://pchproject-api.herokuapp.com/api/metodoenvio/${this.state.idMetodoEnvio}`,\r\n                method: 'GET',\r\n                dataType: 'json',\r\n                success: function (response) {\r\n                    this.setState({\r\n                        Clave: response.Clave,\r\n                        Descripcion: response.Descripcion,\r\n                        Cuota: response.Cuota,\r\n                        Nombre: response.Nombre\r\n                    }, () => console.log(response));\r\n                }.bind(this),\r\n                error: function (response) {\r\n                    console.log(response);\r\n                }.bind(this)\r\n            });\r\n        }\r\n    }\r\n\r\n    resetState() {\r\n        if (this.state.isEditing) {\r\n            this.setState({ isEditing: false });\r\n        }\r\n        if (this.state.isCreating) {\r\n            this.setState({\r\n                Clave: '',\r\n                Nombre: '',\r\n                Descripcion: '',\r\n                Cuota: 0,\r\n                isEditing: false\r\n            });\r\n        }\r\n    }\r\n\r\n    handleSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        let dataObject = {\r\n            metodoenvioid: this.state.idMetodoEnvio != '' ? this.state.idMetodoEnvio : '',\r\n            clave: this.state.Clave,\r\n            nombre: this.state.Nombre,\r\n            descripcion: this.state.Descripcion,\r\n            cuota: this.state.Cuota\r\n        };\r\n        console.log(dataObject);\r\n\r\n        let requestMethod = !this.state.isEditing ?\r\n            'POST' :\r\n            'PUT';\r\n\r\n        $.ajax({\r\n            url: 'https://pchproject-api.herokuapp.com/api/metodoenvio',\r\n            method: requestMethod,\r\n            contentType: 'application/json',\r\n            dataType: 'json',\r\n            data: JSON.stringify(dataObject),\r\n            success: function (response) {\r\n                console.log(response);\r\n                this.resetState();\r\n            }.bind(this),\r\n            fail: function (error) {\r\n                console.log(error);\r\n            }.bind(this)\r\n        });\r\n    }\r\n\r\n    handleEdit() {\r\n        this.setState({ isEditing: true });\r\n    }\r\n\r\n    handleDelete(value) {\r\n        $.ajax({\r\n            method: 'POST',\r\n            url: 'http://localhost:8000/api/metodoenvio/delete',\r\n            data: JSON.stringify({ id: value }),\r\n            contentType: 'application/json',\r\n            dataType: 'json',\r\n            success: function (response) {\r\n                this.getMetodosEnvio();\r\n            }.bind(this),\r\n            fail: function (error) {\r\n                console.log(error);\r\n            }.bind(this)\r\n        });\r\n    }\r\n\r\n    handleInput(e) {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid\">\r\n                <DetailviewHeader\r\n                    Name=\"Metodo de envio\"\r\n                    Value={this.state.Clave}\r\n                    ListViewPath=\"/metodosenvio\"\r\n                    handleEdit={this.handleEdit}\r\n                    handleDelete={this.handleDelete}\r\n                    isCreating={this.state.isCreating}\r\n                    isEditing={this.state.isEditing}\r\n                />\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <fieldset disabled={!(this.state.isEditing || this.state.isCreating)}>\r\n                        <input type=\"hidden\" name=\"id\" value={this.state.idMarca} />\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"claveInput\">\r\n                                Clave\r\n                        </label>\r\n                            <input type=\"text\"\r\n                                id=\"claveInput\"\r\n                                name=\"Clave\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Clave\"\r\n                                onChange={this.handleInput}\r\n                                value={this.state.Clave} />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"nombreInput\">\r\n                                Nombre\r\n                        </label>\r\n                            <input type=\"text\"\r\n                                id=\"nombreInput\"\r\n                                name=\"Nombre\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Nombre\"\r\n                                onChange={this.handleInput}\r\n                                value={this.state.Nombre} />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"DescripcionInput\">\r\n                                Descripcion\r\n                        </label>\r\n                            <textarea\r\n                                name=\"Descripcion\"\r\n                                id=\"DescripcionInput\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Descripcion\"\r\n                                cols=\"30\"\r\n                                rows=\"2\"\r\n                                onChange={this.handleInput}\r\n                                value={this.state.Descripcion} ></textarea>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"CoutaInput\">\r\n                                Cuota de envio\r\n                        </label>\r\n                            <div className=\"input-group\">\r\n                                <div className=\"input-group-prepend\">\r\n                                    <label className=\"input-group-text\" htmlFor=\"CoutaInput\">{\"$\"}</label>\r\n                                </div>\r\n                                <input type=\"number\"\r\n                                    id=\"CoutaInput\"\r\n                                    name=\"Cuota\"\r\n                                    className=\"form-control\"\r\n                                    placeholder=\"Couta\"\r\n                                    onChange={this.handleInput}\r\n                                    value={this.state.Cuota} />\r\n                            </div>\r\n                        </div>\r\n                        {\r\n                            (this.state.isEditing || this.state.isCreating) ?\r\n                                <React.Fragment>\r\n                                    <button\r\n                                        type=\"submit\"\r\n                                        className=\"button button-danger\"\r\n                                        onClick={() => this.resetState()}>Cancelar</button>\r\n                                    <button type=\"submit\" className=\"button button-edit\">Guardar</button>\r\n                                </React.Fragment>\r\n                                : null\r\n                        }\r\n                    </fieldset>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","D:\\Documentos\\UNI\\9no semestre\\PROGRAMACION MULTIMEDIA\\Proyecto\\PCHMayoreo-makeover\\dashboard\\src\\components\\DetailViews\\Articulo.js",["272","273","274","275","276","277","278","279","280","281","282","283","284","285","286","287","288"],"import React, { Component } from 'react'\r\nimport $, { data } from 'jquery';\r\n\r\nimport { FaEdit, FaTrash, FaPlus } from 'react-icons/fa';\r\nimport { GrAdd } from 'react-icons/gr';\r\nimport DetailviewHeader from '../Singles/DetailviewHeader';\r\nimport ImageGallery from '../Singles/ImageGallery';\r\n\r\nexport default class Articulo extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            idArticulo: this.props.match.params.id != undefined ? this.props.match.params.id : '',\r\n            SKU: '',\r\n            ClaveFabricante: '',\r\n            Nombre: '',\r\n            Descripcion: '',\r\n            Precio: '',\r\n            PrecioMayoreo: '',\r\n            CantidadMayoreo: '',\r\n            Marca: '',\r\n            Categoria: '',\r\n            Color: '',\r\n            Tecnologia: '',\r\n            FichaTecnica: '',\r\n            Activo: false,\r\n            Imagenes: [],\r\n            Marcas: [],\r\n            Categorias: [],\r\n            isCreating: this.props.isCreating != undefined ? this.props.isCreating : false,\r\n            isEditing: this.props.isEditing != undefined ? this.props.isEditing : false\r\n        }\r\n\r\n        this.fileInputRef = React.createRef();\r\n        this.imageInpuRef = React.createRef();\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleInput = this.handleInput.bind(this);\r\n        this.handleFileInput = this.handleFileInput.bind(this);\r\n        this.handleCheck = this.handleCheck.bind(this);\r\n        this.handleDelete = this.handleDelete.bind(this);\r\n        this.handleEdit = this.handleEdit.bind(this);\r\n        this.resetState = this.resetState.bind(this);\r\n\r\n        this.handleGalleryClick = this.handleGalleryClick.bind(this);\r\n        this.handleImageInput = this.handleImageInput.bind(this);\r\n        this.handleImageDelete = this.handleImageDelete.bind(this);\r\n\r\n        this.createArticulo = this.createArticulo.bind(this);\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        $.ajax({\r\n            method: 'GET',\r\n            url: 'https://pchproject-api.herokuapp.com/api/categoria/',\r\n            dataType: 'json',\r\n            success: function (response) {\r\n                this.setState({ Categorias: [...response] })\r\n            }.bind(this),\r\n            fail: function (error) {\r\n                console.log(error);\r\n            }.bind(this)\r\n        });\r\n\r\n        $.ajax({\r\n            method: 'GET',\r\n            url: 'https://pchproject-api.herokuapp.com/api/marca/',\r\n            dataType: 'json',\r\n            success: function (response) {\r\n                this.setState({ Marcas: [...response] })\r\n            }.bind(this),\r\n            fail: function (error) {\r\n                console.log(error);\r\n            }.bind(this)\r\n        });\r\n        if (this.state.idArticulo != '') {\r\n            $.ajax({\r\n                method: 'GET',\r\n                url: `https://pchproject-api.herokuapp.com/api/articulo/get/${this.state.idArticulo}`,\r\n                dataType: 'json',\r\n                success: function (res) {\r\n                    console.log(res);\r\n                    this.setState({\r\n                        SKU: res.SKU,\r\n                        ClaveFabricante: res.ClaveFabricante,\r\n                        Nombre: res.Nombre,\r\n                        Descripcion: res.Descripcion,\r\n                        Precio: res.Precio,\r\n                        PrecioMayoreo: res.PrecioMayoreo,\r\n                        CantidadMayoreo: res.CantidadMayoreo,\r\n                        Marca: res.marca_id,\r\n                        Categoria: res.categoria_id,\r\n                        Color: res.Color,\r\n                        Tecnologia: res.Tecnologia,\r\n                        Imagenes: [...res.imagenes]\r\n                    }, () => {\r\n                        console.log(this.state);\r\n                    });\r\n                }.bind(this),\r\n                fail: function (error) {\r\n                    console.log(error);\r\n                }.bind(this)\r\n            });\r\n        }\r\n    }\r\n\r\n    resetState() {\r\n        if (this.state.isCreating) {\r\n            this.setState({\r\n                idArticulo: '',\r\n                SKU: '',\r\n                ClaveFabricante: '',\r\n                Nombre: '',\r\n                Descripcion: '',\r\n                Precio: '',\r\n                PrecioMayoreo: '',\r\n                CantidadMayoreo: '',\r\n                Marca: '',\r\n                Categoria: '',\r\n                Color: '',\r\n                Tecnologia: '',\r\n                FichaTecnica: '',\r\n                Activo: false,\r\n                Imagenes: [],\r\n                isEditing: false\r\n            });\r\n        }\r\n        if (this.state.isEditing) {\r\n            this.setState({ isEditing: false });\r\n        }\r\n    }\r\n\r\n    handleSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        if (this.state.isCreating) {\r\n            this.createArticulo();\r\n        }\r\n        if (this.state.isEditing) {\r\n            this.editArticulo();\r\n        }\r\n    }\r\n    createArticulo() {\r\n        console.log(this.state);\r\n        let formdata = new FormData();\r\n        formdata.append('nombre', this.state.Nombre);\r\n        formdata.append('sku', this.state.SKU);\r\n        formdata.append('claveFabricante', this.state.ClaveFabricante);\r\n        formdata.append('descripcion', this.state.Descripcion);\r\n        formdata.append('precio', this.state.Precio);\r\n        formdata.append('precioMayoreo', this.state.PrecioMayoreo);\r\n        formdata.append('cantidadMayoreo', this.state.CantidadMayoreo);\r\n        formdata.append('marca', this.state.Marca);\r\n        formdata.append('categoria', this.state.Categoria);\r\n        formdata.append('color', this.state.Color);\r\n        formdata.append('tecnologia', this.state.Tecnologia);\r\n        formdata.append('fichaTecnica', this.state.FichaTecnica);\r\n        formdata.append('activo', this.state.Activo ? 1 : 0);\r\n        for (let idx = 0; idx < this.state.Imagenes.length; idx++) {\r\n            const img = this.state.Imagenes[idx];\r\n            formdata.append(`image[${idx}]`, img.File);\r\n        }\r\n\r\n        let xhr = new XMLHttpRequest();\r\n        xhr.open('POST', 'http://localhost:8000/api/articulo', true);\r\n        xhr.send(formdata);\r\n        xhr.onreadystatechange = function (response) {\r\n            if (xhr.readyState == 4) {\r\n                if (xhr.status == 200) {\r\n                    let response = JSON.parse(xhr.responseText);\r\n                    console.log(response);\r\n                    this.resetState();\r\n                }\r\n                else {\r\n                    console.log(xhr.responseText);\r\n                }\r\n            }\r\n        }.bind(this);\r\n    }\r\n\r\n    editArticulo() {\r\n        let dataObject = {\r\n            articuloid: this.state.idArticulo,\r\n            sku: this.state.SKU,\r\n            claveFabricante: this.state.ClaveFabricante,\r\n            nombre: this.state.Nombre,\r\n            descripcion: this.state.Descripcion,\r\n            precio: this.state.Precio,\r\n            precioMayoreo: this.state.PrecioMayoreo,\r\n            cantidadMayoreo: this.state.CantidadMayoreo,\r\n            marca: this.state.Marca,\r\n            categoria: this.state.Categoria,\r\n            tecnologia: this.state.Tecnologia,\r\n            color: this.state.Color,\r\n            activo: this.state.Activo\r\n        }\r\n        console.log(dataObject);\r\n        $.ajax({\r\n            url: 'http://localhost:8000/api/articulo',\r\n            method: 'PUT',\r\n            contentType: 'application/json',\r\n            dataType: 'json',\r\n            data: JSON.stringify(dataObject),\r\n            success: function (response) {\r\n                console.log(response);\r\n                this.resetState();\r\n            }.bind(this),\r\n            fail: function (error) {\r\n                console.log(error);\r\n            }.bind(this)\r\n        });\r\n\r\n    }\r\n\r\n    handleEdit() {\r\n        this.setState({ isEditing: true });\r\n    }\r\n\r\n    handleDelete(value) {\r\n        $.ajax({\r\n            method: 'POST',\r\n            url: 'http://localhost:8000/api/articulo/delete',\r\n            data: JSON.stringify({ id: value }),\r\n            contentType: 'application/json',\r\n            dataType: 'json',\r\n            success: function (response) {\r\n                this.getArticulos();\r\n            }.bind(this),\r\n            fail: function (error) {\r\n                console.log(error);\r\n            }.bind(this)\r\n        });\r\n    }\r\n\r\n    handleInput(e) {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    }\r\n    handleFileInput(e) {\r\n        e.preventDefault();\r\n        this.setState({ FichaTecnica: e.target.files[0] });\r\n    }\r\n    handleCheck(e) {\r\n        const checked = (e.target.checked) ? 1 : 0;\r\n        this.setState({ Activo: checked });\r\n    }\r\n\r\n    handleGalleryClick() {\r\n        this.imageInpuRef.current.click();\r\n    }\r\n    handleImageInput(e) {\r\n        if (this.state.isCreating) {\r\n            let reader = new FileReader();\r\n            let file = e.target.files[0];\r\n\r\n            reader.onload = () => {\r\n                let images = [...this.state.Imagenes];\r\n                images.push({ File: file, Path: reader.result });\r\n                this.setState({\r\n                    Imagenes: images\r\n                });\r\n            }\r\n            reader.readAsDataURL(file);\r\n        }\r\n    }\r\n    handleImageDelete(index) {\r\n        if (this.state.isCreating) {\r\n            let images = [...this.state.Imagenes];\r\n            if (index > -1) {\r\n                images.splice(index, 1);\r\n                this.setState({ Imagenes: images });\r\n            }\r\n        }\r\n        if (this.state.isEditing) {\r\n            let imgid = this.state.Imagenes[index].id;\r\n            console.log(imgid);\r\n\r\n            $.ajax({\r\n                url: `http://localhost:8000/api/articulo/media/${imgid}`,\r\n                method: 'DELETE',\r\n                dataType: 'json',\r\n                success: function (response) {\r\n                    console.log(response);  \r\n                    let images = [...this.state.Imagenes];\r\n                    if (index > -1) {\r\n                        images.splice(index, 1);\r\n                        this.setState({ Imagenes: images });\r\n                    }\r\n                }.bind(this),\r\n                error: function (response) {\r\n                    console.log(response);\r\n                }.bind(this)\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <DetailviewHeader\r\n                    Name=\"Articulo\"\r\n                    Value={this.state.SKU}\r\n                    ListViewPath='/articulos'\r\n                    handleEdit={this.handleEdit}\r\n                    handleDelete={this.handleDelete}\r\n                    isEditing={this.state.isEditing}\r\n                    isCreating={this.state.isCreating}\r\n                />\r\n                <form onSubmit={this.handleSubmit} encType=\"multipart/form-data\" className=\"w-100\">\r\n                    <fieldset disabled={!(this.state.isEditing || this.state.isCreating)} >\r\n                        <div className=\"row\">\r\n                            <div className=\"col-sm-12 col-md-6\">\r\n                                <input type=\"hidden\" name=\"id\" value={this.state.idMarca} />\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"claveInput\">\r\n                                        SKU\r\n                                </label>\r\n                                    <input type=\"text\"\r\n                                        id=\"claveInput\"\r\n                                        name=\"SKU\"\r\n                                        className=\"form-control\"\r\n                                        placeholder=\"SKU\"\r\n                                        onChange={this.handleInput}\r\n                                        value={this.state.SKU} />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"ClaveFabricanteInput\">\r\n                                        Clave del fabricante\r\n                                </label>\r\n                                    <input type=\"text\"\r\n                                        id=\"ClaveFabricanteInput\"\r\n                                        name=\"ClaveFabricante\"\r\n                                        className=\"form-control\"\r\n                                        placeholder=\"Clave del fabricante\"\r\n                                        onChange={this.handleInput}\r\n                                        value={this.state.ClaveFabricante} />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"nombreInput\">\r\n                                        Nombre\r\n                                </label>\r\n                                    <input type=\"text\"\r\n                                        id=\"nombreInput\"\r\n                                        name=\"Nombre\"\r\n                                        className=\"form-control\"\r\n                                        placeholder=\"Nombre\"\r\n                                        onChange={this.handleInput}\r\n                                        value={this.state.Nombre} />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"DescripcionInput\">\r\n                                        Descripcion\r\n                                    </label>\r\n                                    <textarea\r\n                                        name=\"Descripcion\"\r\n                                        id=\"DescripcionInput\"\r\n                                        className=\"form-control\"\r\n                                        cols=\"30\"\r\n                                        rows=\"2\"\r\n                                        value={this.state.Descripcion}\r\n                                        onChange={this.handleInput}\r\n                                        placeholder=\"Descripcion\"></textarea>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"PrecioInput\">\r\n                                        Precio normal\r\n                                    </label>\r\n                                    <div className=\"input-group\">\r\n                                        <div className=\"input-group-prepend\">\r\n                                            <label className=\"input-group-text\" htmlFor=\"PrecioMayoreoInput\">{\"$\"}</label>\r\n                                        </div>\r\n                                        <input type=\"number\"\r\n                                            id=\"PrecioInput\"\r\n                                            name=\"Precio\"\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"Precio\"\r\n                                            onChange={this.handleInput}\r\n                                            value={this.state.Precio} />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-12 col-md-6\">\r\n                                            <label htmlFor=\"CantidadMayoreoInput\">\r\n                                                Min. mayoreo\r\n                                            </label>\r\n                                            <input type=\"text\"\r\n                                                id=\"CantidadMayoreoInput\"\r\n                                                name=\"CantidadMayoreo\"\r\n                                                className=\"form-control\"\r\n                                                placeholder=\"Cantidad\"\r\n                                                onChange={this.handleInput}\r\n                                                value={this.state.CantidadMayoreo} />\r\n                                        </div>\r\n                                        <div className=\"col-sm-12 col-md-6\">\r\n                                            <label htmlFor=\"PrecioMayoreoInput\">\r\n                                                Precio mayoreo\r\n                                            </label>\r\n                                            <div className=\"input-group\">\r\n                                                <div className=\"input-group-prepend\">\r\n                                                    <label className=\"input-group-text\" htmlFor=\"PrecioMayoreoInput\">{\"$\"}</label>\r\n                                                </div>\r\n                                                <input type=\"text\"\r\n                                                    id=\"PrecioMayoreoInput\"\r\n                                                    name=\"PrecioMayoreo\"\r\n                                                    className=\"form-control\"\r\n                                                    placeholder=\"Precio\"\r\n                                                    onChange={this.handleInput}\r\n                                                    value={this.state.PrecioMayoreo} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-md-6\">\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"MarcaInput\">\r\n                                        Marca\r\n                                </label>\r\n                                    <div className=\"input-group\">\r\n                                        <select\r\n                                            name=\"Marca\"\r\n                                            id=\"MarcaInput\"\r\n                                            className=\"custom-select\"\r\n                                            value={this.state.Marca}\r\n                                            onChange={this.handleInput}>\r\n                                            <option value=\"0\">{\"-- Sleecione un opcion --\"}</option>\r\n                                            {\r\n                                                this.state.Marcas &&\r\n                                                this.state.Marcas.map((marca, index) => {\r\n                                                    return <option value={marca.id} key={index}>{marca.Nombre}</option>\r\n                                                })\r\n                                            }\r\n                                        </select>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"CategoriaInput\">\r\n                                        Categoria\r\n                                </label>\r\n                                    <div className=\"input-group\">\r\n                                        <select\r\n                                            name=\"Categoria\"\r\n                                            id=\"CategoriaInput\"\r\n                                            className=\"custom-select\"\r\n                                            value={this.state.Categoria}\r\n                                            onChange={this.handleInput}>\r\n                                            <option value=\"0\">{\"-- Sleecione un opcion --\"}</option>\r\n                                            {\r\n                                                this.state.Categorias &&\r\n                                                this.state.Categorias.map((cat, index) => {\r\n                                                    return <option value={cat.id} key={index}>{cat.Nombre}</option>\r\n                                                })\r\n                                            }\r\n                                        </select>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"ColorInput\">\r\n                                        Color\r\n                                </label>\r\n                                    <input type=\"text\"\r\n                                        id=\"colorInput\"\r\n                                        name=\"Color\"\r\n                                        className=\"form-control\"\r\n                                        placeholder=\"Color\"\r\n                                        onChange={this.handleInput}\r\n                                        value={this.state.Color} />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"TecnologiaInput\">\r\n                                        Tecnologia\r\n                                </label>\r\n                                    <input type=\"text\"\r\n                                        id=\"nombreInput\"\r\n                                        name=\"Tecnologia\"\r\n                                        className=\"form-control\"\r\n                                        placeholder=\"Tecnologia\"\r\n                                        onChange={this.handleInput}\r\n                                        value={this.state.Tecnologia} />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"fichaInput\">\r\n                                        Ficha técnica\r\n                                </label>\r\n                                    <div className=\"input-group\">\r\n                                        <div className=\"custom-file\">\r\n                                            <input\r\n                                                type=\"file\"\r\n                                                className=\"custom-file-input\"\r\n                                                id=\"fichaInput\"\r\n                                                accept=\".pdf\"\r\n                                                name=\"FichaTecnica\"\r\n                                                ref={this.fileInputRef}\r\n                                                onChange={this.handleFileInput}\r\n                                            />\r\n                                            <label className=\"custom-file-label\" htmlFor=\"fichaInput\">\r\n                                                {\r\n                                                    !this.state.FichaTecnica ? 'Examinar...' : 'Archivo seleccionado'\r\n                                                }\r\n                                            </label>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"form-check m-4\">\r\n                                    <input\r\n                                        type=\"checkbox\"\r\n                                        className=\"form-check-input\"\r\n                                        name=\"Activo\"\r\n                                        id=\"ActivoInput\"\r\n                                        onChange={e => this.handleCheck(e)}\r\n                                        checked={this.state.Activo} />\r\n                                    <label className=\"form-check-label\" htmlFor=\"ActivoInput\">\r\n                                        Artículo activo\r\n                                </label>\r\n                                </div>\r\n                                <hr />\r\n                            </div>\r\n                            <div className=\"w-100 mt-4 mb-4\">\r\n                                <h5 className=\"mt-4\">Imagenes</h5>\r\n                                <hr />\r\n                                <button onClick={this.handleGalleryClick} type=\"button\" className=\"button button-success\">\r\n                                    <GrAdd color={'white'} /> <span className=\"ml-1\">Agregar</span>\r\n                                </button>\r\n                                <input\r\n                                    type=\"file\"\r\n                                    className=\"d-none\"\r\n                                    name=\"Image\"\r\n                                    accept=\"image/jpg, image/jpeg, image/png\"\r\n                                    ref={this.imageInpuRef}\r\n                                    onChange={this.handleImageInput}\r\n                                />\r\n                                <div className=\"row text-center\">\r\n                                    {\r\n                                        this.state.Imagenes.length > 0 ?\r\n                                            this.state.Imagenes.map((imagen, index) => {\r\n                                                return (\r\n                                                    <div className=\"col-lg-3 col-md-6 p-2 mt-2 overflow-hidden\" key={index}>\r\n                                                        <div className=\"container image-gallery-holder h-100 p-2\">\r\n                                                            <button\r\n                                                                className=\"position-absolute align-middle close-img-button\"\r\n                                                                type=\"button\"\r\n                                                                onClick={() => { this.handleImageDelete(index) }}\r\n                                                            >\r\n                                                                <span>&times;</span>\r\n                                                            </button>\r\n                                                            <img\r\n                                                                src={imagen.Path}\r\n                                                                alt=\"Hola esta es una prueba\"\r\n                                                                className=\"img-fluid\"\r\n                                                            />\r\n                                                        </div>\r\n                                                    </div>);\r\n                                            }) :\r\n                                            <div className=\"col-lg-3 col-md-6 p-2 mt-2 overflow-hidden\">\r\n                                                <div className=\"container image-gallery-holder h-100 p-2\">\r\n                                                    <img\r\n                                                        alt=\"No hay ninguna imagen todavía\"\r\n                                                        className=\"img-fluid\"\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                            {\r\n                                (this.state.isEditing || this.state.isCreating) &&\r\n                                <React.Fragment>\r\n                                    <button\r\n                                        type=\"submit\"\r\n                                        className=\"button button-danger\"\r\n                                        onClick={() => this.resetState()}>Cancelar</button>\r\n                                    <button type=\"submit\" className=\"button button-edit\">Guardar</button>\r\n                                </React.Fragment>\r\n                            }\r\n                        </div>\r\n                    </fieldset>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","D:\\Documentos\\UNI\\9no semestre\\PROGRAMACION MULTIMEDIA\\Proyecto\\PCHMayoreo-makeover\\dashboard\\src\\components\\DetailViews\\InventarioDetalle.js",["289","290","291","292","293","294","295"],"import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport $ from 'jquery';\r\n\r\nimport { FaEdit, FaTrash, FaExpandAlt } from 'react-icons/fa';\r\n\r\nexport default class InventarioDetalle extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            idInventario: this.props.match.params.id,\r\n            Inventario: {},\r\n            Detalles: [],\r\n            isEditing: false\r\n        }\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleInput = this.handleInput.bind(this);\r\n        this.handleDelete = this.handleDelete.bind(this);\r\n        this.handleEdit = this.handleEdit.bind(this);\r\n        this.getDetalles = this.getDetalles.bind(this);\r\n        this.resetState = this.resetState.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getDetalles();\r\n\r\n        $.ajax({\r\n            method: 'GET',\r\n            url: 'http://localhost:8001/api/inventario/' + this.state.idInventario,\r\n            dataType: 'json',\r\n            success: function (response) {\r\n                this.setState({ Inventario: response });\r\n            }.bind(this),\r\n            fail: function (error) {\r\n                console.log(error);\r\n            }.bind(this)\r\n        });\r\n    }\r\n\r\n    resetState() {\r\n        this.setState({\r\n            Cantidad: 0,\r\n            Movimiento: 'salida',\r\n            idInventario: '',\r\n            isEditing: false\r\n        });\r\n    }\r\n    getDetalles() {\r\n        $.ajax({\r\n            method: 'GET',\r\n            url: 'http://localhost:8001/api/inventario/' + this.state.idInventario + '/details',\r\n            dataType: 'json',\r\n            success: function (response) {\r\n                this.setState({ Detalles: [...response] }, () => {\r\n                    console.log(response)\r\n                })\r\n            }.bind(this),\r\n            fail: function (error) {\r\n                console.log(error);\r\n            }.bind(this)\r\n        });\r\n    }\r\n\r\n\r\n    handleSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        let dataObject = {\r\n            id: this.state.idEstado != '' ? this.state.idEstado : '',\r\n            clave: this.state.Clave,\r\n            sucursal: this.state.Sucursal != \"0\" ? this.state.Sucursal : '',\r\n            articulo: this.state.Articulo,\r\n            cantidad: this.state.Cantidad\r\n        };\r\n\r\n        let requestURL = !this.state.isEditing ?\r\n            'http://localhost:8001/api/inventario/create' :\r\n            'http://localhost:8001/api/inventario/edit';\r\n\r\n        $.ajax({\r\n            method: 'POST',\r\n            url: requestURL,\r\n            contentType: 'application/json',\r\n            dataType: 'json',\r\n            data: JSON.stringify(dataObject),\r\n            success: function (response) {\r\n                this.resetState();\r\n                this.getDetalles();\r\n            }.bind(this),\r\n            fail: function (error) {\r\n                console.log(error);\r\n            }.bind(this)\r\n        });\r\n    }\r\n\r\n    handleEdit(value) {\r\n        $.ajax({\r\n            method: 'GET',\r\n            url: 'http://localhost:8001/api/inventario/' + value,\r\n            dataType: 'json',\r\n            success: function (response) {\r\n                this.setState({\r\n                    idInventario: response._id,\r\n                    Clave: response.Clave,\r\n                    Sucursal: response.Sucursal,\r\n                    Articulo: response.Articulo,\r\n                    Cantidad: response.Cantidad,\r\n                    isEditing: true\r\n                }, () => {\r\n                    console.log(this.state);\r\n                })\r\n            }.bind(this),\r\n            fail: function (error) {\r\n                console.log(error);\r\n            }.bind(this)\r\n        });\r\n    }\r\n\r\n    handleDelete(value) {\r\n        $.ajax({\r\n            method: 'POST',\r\n            url: 'http://localhost:8001/api/inventario/delete',\r\n            data: JSON.stringify({ id: value }),\r\n            contentType: 'application/json',\r\n            dataType: 'json',\r\n            success: function (response) {\r\n                this.getDetalles();\r\n            }.bind(this),\r\n            fail: function (error) {\r\n                console.log(error);\r\n            }.bind(this)\r\n        });\r\n    }\r\n\r\n    handleInput(e) {\r\n        this.setState({ [e.target.name]: e.target.value }, () => {\r\n            console.log(this.state.SucursalDefault)\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid\">\r\n                <h4>Detalles de inventario</h4>\r\n                <hr />\r\n                <div class={`alert alert-primary ${this.state.isEditing ? 'd-block': 'd-none'}`} role=\"alert\">\r\n                    Está editando un registro\r\n                </div>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <input type=\"hidden\" name=\"id\" value={this.state.idInventario} />\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"nombreInput\">\r\n                            Clave del inventario\r\n                        </label>\r\n                        <input type=\"text\"\r\n                            id=\"nombreInput\"\r\n                            name=\"Clave\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Clave\"\r\n                            disabled\r\n                            onChange={this.handleInput}\r\n                            value={this.state.Clave} />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"SucursalInput\">\r\n                            Sucursal\r\n                        </label>\r\n                        <input type=\"text\"\r\n                            id=\"nombreInput\"\r\n                            name=\"Sucursal\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Sucursal\"\r\n                            disabled\r\n                            value={this.state.Sucursal} />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"ArticuloInput\">\r\n                            Articulo\r\n                        </label>\r\n                        <input type=\"text\"\r\n                            id=\"ArticuloInput\"\r\n                            name=\"Articulo\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Articulo\"\r\n                            disabled\r\n                            value={this.state.Articulo} />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"CantidadInput\">\r\n                            Cantidad\r\n                        </label>\r\n                        <input type=\"text\"\r\n                            id=\"CantidadInput\"\r\n                            name=\"Cantidad\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Cantidad\"\r\n                            disabled\r\n                            value={this.state.Cantidad} />\r\n                    </div>\r\n                    <button\r\n                        type=\"submit\"\r\n                        className=\"button button-danger\"\r\n                        onClick={() => this.resetState()}>Cancelar</button>\r\n                    <button type=\"submit\" className=\"button button-edit\">Guardar</button>\r\n                </form>\r\n                <div className=\"table-container\">\r\n                    <table className=\"table table-hover\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th scope=\"col\">Clave</th>\r\n                                <th scope=\"col\">Sucursal</th>\r\n                                <th scope=\"col\">Articulo</th>\r\n                                <th scope=\"col\">Cantidad</th>\r\n                                <th scope=\"col\">Acción</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                this.state.Inventarios !== undefined &&\r\n                                this.state.Inventarios.map((inventario, index) => {\r\n                                    return (\r\n                                        <tr key={index}>\r\n                                            <td>{inventario.Clave}</td>\r\n                                            <td>{inventario.Sucursal}</td>\r\n                                            <td>{inventario.Articulo}</td>\r\n                                            <td>{inventario.Cantidad}</td>\r\n                                            <td>\r\n                                                <button type=\"button\" className=\"button button-edit\">\r\n                                                    <Link to={`/inventario/${inventario._id}`}>\r\n                                                        <FaExpandAlt style={{ verticalAlign: 'baseline' }} />\r\n                                                    </Link>\r\n                                                </button>\r\n                                                <button\r\n                                                    type=\"button\"\r\n                                                    className=\"button button-edit\"\r\n                                                    onClick={() => this.handleEdit(inventario._id)}>\r\n                                                    <FaEdit style={{ verticalAlign: 'baseline' }} />\r\n                                                </button>\r\n                                                <button\r\n                                                    type=\"button\"\r\n                                                    className=\"button button-danger\"\r\n                                                    onClick={() => this.handleDelete(inventario._id)}>\r\n                                                    <FaTrash style={{ verticalAlign: 'baseline' }} />\r\n                                                </button>\r\n                                            </td>\r\n                                        </tr>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","D:\\Documentos\\UNI\\9no semestre\\PROGRAMACION MULTIMEDIA\\Proyecto\\PCHMayoreo-makeover\\dashboard\\src\\components\\Singles\\ChartInfo.js",["296"],"import React, { Component } from 'react'\r\nimport { Bar } from 'react-chartjs-2'\r\nimport { FaRegHandScissors } from 'react-icons/fa';\r\n\r\nexport default class ChartInfo extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.data = {\r\n            labels: ['Ene', 'Feb', 'Mar', 'Abr', 'May', 'Jun', 'Jul', 'Ago', 'Sep', 'Oct', 'Nov', 'Dic'],\r\n            datasets: [\r\n                {\r\n                    label: 'Ventas por mes',\r\n                    data: [100, 200,211,544,110,400,121,214,124,560,412,100]\r\n                }\r\n            ]\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <h4>{ this.props.name }</h4>\r\n                <Bar data={this.data}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","D:\\Documentos\\UNI\\9no semestre\\PROGRAMACION MULTIMEDIA\\Proyecto\\PCHMayoreo-makeover\\dashboard\\src\\components\\Singles\\DetailviewHeader.js",["297"],"import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { FaTrash, FaEdit, FaChevronLeft } from 'react-icons/fa'\r\n\r\nexport default class DetailviewHeader extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"return-btn-container d-flex\">\r\n                    <Link className=\"return-list-btn\" to={this.props.ListViewPath} >\r\n                        <FaChevronLeft style={{ display: 'inline' }} />\r\n                        <h6 className=\"d-inline\">Regresar</h6>\r\n                    </Link>\r\n                </div>\r\n                <h4>{this.props.Name} <span style={{ color: '#18A4E0' }}>{this.props.Value}</span> </h4>\r\n                {\r\n                    !this.props.isCreating &&\r\n                    <React.Fragment>\r\n                        <button className=\"button\" onClick={this.props.handleEdit}>\r\n                            <FaEdit style={{ verticalAlign: 'baseline' }} />\r\n                        </button>\r\n                        <button className=\"button\" onClick={this.props.handleDelete}>\r\n                            <FaTrash style={{ verticalAlign: 'baseline' }} />\r\n                        </button>\r\n                    </React.Fragment>\r\n                }\r\n                <hr />\r\n                <div className={`alert alert-primary ${this.props.isEditing ? 'd-block' : 'd-none'}`} role=\"alert\">\r\n                    Está editando un registro\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","D:\\Documentos\\UNI\\9no semestre\\PROGRAMACION MULTIMEDIA\\Proyecto\\PCHMayoreo-makeover\\dashboard\\src\\components\\ListViews\\Articulos.js",["298","299","300"],"import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport $ from 'jquery'\r\nimport { FaEdit, FaTrash } from 'react-icons/fa';\r\n\r\nexport default class Articulos extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            Articulos: []\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        $.ajax({\r\n            method: 'GET',\r\n            url: 'https://pchproject-api.herokuapp.com/api/articulo/',\r\n            dataType: 'json',\r\n            success: function (response) {\r\n                this.setState({ Articulos: [...response] })\r\n            }.bind(this),\r\n            fail: function (error) {\r\n                console.log(error);\r\n            }.bind(this)\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"table-container container\">\r\n            <Link className=\"btn btn-success mb-4\" to='/articulo/create'>Nuevo</Link>\r\n                <table className=\"table table-hover\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th scope=\"col\">SKU</th>\r\n                            <th scope=\"col\">Nombre</th>\r\n                            <th scope=\"col\">Precio</th>\r\n                            <th scope=\"col\">Precio Mayoreo</th>\r\n                            <th scope=\"col\">Activo</th>\r\n                            <th scope=\"col\">Acción</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            this.state.Articulos !== undefined &&\r\n                            this.state.Articulos.map((articulo, index) => {\r\n                                return (\r\n                                    <tr key={index}>\r\n                                        <td>{articulo.SKU}</td>\r\n                                        <td>{articulo.Nombre}</td>\r\n                                        <td>$ {articulo.Precio}</td>\r\n                                        <td>$ {articulo.PrecioMayoreo}</td>\r\n                                        <td>{articulo.Activo ? 'Activo' : 'Inactivo'}</td>\r\n                                        <td>\r\n                                            <Link to={`/articulo/detail/${articulo.id}`} >ver</Link>\r\n                                        </td>\r\n                                    </tr>\r\n                                )\r\n                            })\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","D:\\Documentos\\UNI\\9no semestre\\PROGRAMACION MULTIMEDIA\\Proyecto\\PCHMayoreo-makeover\\dashboard\\src\\components\\Singles\\ImageGallery.js",["301"],"import React, { Component } from 'react'\r\nimport { GrAdd } from 'react-icons/gr'\r\n\r\nexport default class ImageGallery extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"w-100 container-fluid mb-4\">\r\n                <h5 className=\"mt-4\">Imagenes</h5>\r\n                <hr />\r\n                <button onClick={this.props.onAddImage} className=\"button button-success\">\r\n                    <GrAdd color={'white'} /> <span className=\"ml-1\">Agregar</span>\r\n                </button>\r\n                <div className=\"row text-center\">\r\n                    {\r\n                        this.props.Imagenes.map((imagen, index) => {\r\n                            return (\r\n                                <div className=\"col-lg-3 col-md-6 p-2 mt-2 overflow-hidden\" key={index}>\r\n                                    <div className=\"container image-gallery-holder h-100 p-2\">\r\n                                        <button className=\"position-absolute align-middle close-img-button\" onClick={() => this.props.onDeleteImg(imagen.id)}>\r\n                                            <span>&times;</span>\r\n                                        </button>\r\n                                        <img src={imagen.Path} alt=\"Hola esta es una prueba\" className=\"img-fluid\" />\r\n                                    </div>\r\n                                </div>);\r\n                        })\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","D:\\Documentos\\UNI\\9no semestre\\PROGRAMACION MULTIMEDIA\\Proyecto\\PCHMayoreo-makeover\\dashboard\\src\\components\\ListViews\\MetodosEnvio.js",["302"],"import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport $ from 'jquery';\r\n\r\nexport default class MetodosEnvio extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            MetodosEnvio: []\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        $.ajax({\r\n            url: 'https://pchproject-api.herokuapp.com/api/metodoenvio',\r\n            method: 'GET',\r\n            dataType: 'json',\r\n            success: function (response) {\r\n                this.setState({MetodosEnvio: [...response]});\r\n            }.bind(this),\r\n            error: function (response) {\r\n                console.log(response);\r\n            }.bind(this)\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"table-container container\">\r\n                <Link to=\"/metodoenvio/create\" className=\"btn btn-success mb-4\">Nuevo</Link>\r\n                <table className=\"table table-hover\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th scope=\"col\">Clave</th>\r\n                            <th scope=\"col\">Nombre</th>\r\n                            <th scope=\"col\">Descripcion</th>\r\n                            <th scope=\"col\">Cuota</th>\r\n                            <th scope=\"col\">Acción</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            this.state.MetodosEnvio !== undefined &&\r\n                            this.state.MetodosEnvio.map((metodoenvio, index) => {\r\n                                return (\r\n                                    <tr key={index}>\r\n                                        <td>{metodoenvio.Clave}</td>\r\n                                        <td>{metodoenvio.Nombre}</td>\r\n                                        <td>{metodoenvio.Descripcion}</td>\r\n                                        <td>$ {metodoenvio.Cuota}</td>\r\n                                        <td>\r\n                                            <Link to={`/metodoenvio/detail/${metodoenvio.id}`}>Ver</Link>\r\n                                        </td>\r\n                                    </tr>\r\n                                )\r\n                            })\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","D:\\Documentos\\UNI\\9no semestre\\PROGRAMACION MULTIMEDIA\\Proyecto\\PCHMayoreo-makeover\\dashboard\\src\\components\\ListViews\\MetodosPago.js",["303"],"import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport $ from 'jquery'\r\n\r\nexport default class MetodosPago extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            MetodosPago: []\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        $.ajax({\r\n            url: 'https://pchproject-api.herokuapp.com/api/metodopago',\r\n            method: 'GET',\r\n            dataType: 'json',\r\n            success: function (response) {\r\n                this.setState({MetodosPago: [...response]});\r\n            }.bind(this),\r\n            error: function (response) {\r\n                console.log(response);\r\n            }.bind(this)\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"table-container container\">\r\n                <Link to=\"/metodopago/create\" className=\"btn btn-success mb-4\">Nuevo</Link>\r\n                <table className=\"table table-hover\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th scope=\"col\">Clave</th>\r\n                            <th scope=\"col\">Nombre</th>\r\n                            <th scope=\"col\">Descripción</th>\r\n                            <th scope=\"col\">Cuota</th>\r\n                            <th scope=\"col\">Acción</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            this.state.MetodosPago !== undefined &&\r\n                            this.state.MetodosPago.map((metodopago, index) => {\r\n                                return (\r\n                                    <tr key={index}>\r\n                                        <td>{metodopago.Clave}</td>\r\n                                        <td>{metodopago.Nombre}</td>\r\n                                        <td>{metodopago.Descripcion}</td>\r\n                                        <td>{metodopago.Cuota}</td>\r\n                                        <td>\r\n                                            <Link to={`/metodopago/detail/${metodopago.id}`}>Ver</Link>\r\n                                        </td>\r\n                                    </tr>\r\n                                )\r\n                            })\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","D:\\Documentos\\UNI\\9no semestre\\PROGRAMACION MULTIMEDIA\\Proyecto\\PCHMayoreo-makeover\\dashboard\\src\\components\\DetailViews\\MetodoPago.js",["304","305","306","307","308","309","310"],"import React, { Component } from 'react'\r\nimport $ from 'jquery'\r\nimport DetailviewHeader from '../Singles/DetailviewHeader'\r\n\r\nexport default class MetodoPago extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            metodopagoid: this.props.match.params.id != undefined ? this.props.match.params.id : '',\r\n            Nombre: '',\r\n            Clave: '',\r\n            Descripcion: '',\r\n            Cuota: '',\r\n            isCreating: this.props.isCreating != undefined ? this.props.isCreating : false,\r\n            isEditing: this.props.isEditing != undefined ? this.props.isEditing : false\r\n        };\r\n        this.handleInput = this.handleInput.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.resetState = this.resetState.bind(this);\r\n        this.handleEdit = this.handleEdit.bind(this);\r\n        this.handleDelete = this.handleDelete.bind(this);\r\n    }\r\n    \r\n    componentDidMount() {\r\n        if (this.state.metodopagoid != '') {\r\n            $.ajax({\r\n                url: `https://pchproject-api.herokuapp.com/api/metodopago/${this.state.metodopagoid}`,\r\n                method: 'GET',\r\n                success: function(response){\r\n                    this.setState({\r\n                        Clave: response.Clave,\r\n                        Nombre: response.Nombre,\r\n                        Descripcion: response.Descripcion,\r\n                        Cuota: response.Cuota\r\n                    });\r\n                }.bind(this),\r\n                fail: function(response) {\r\n                    console.log(response);\r\n                }.bind(this)\r\n            })\r\n        }\r\n    }\r\n\r\n    resetState() {\r\n        if (this.state.isEditing) {\r\n            this.setState({ isEditing: false });\r\n        }\r\n        if (this.state.isCreating) {\r\n            this.setState({\r\n                Clave: '',\r\n                Nombre: '',\r\n                Descripcion: '',\r\n                Cuota: '',\r\n                isEditing: false\r\n            });\r\n        }\r\n    }\r\n\r\n    handleSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        let dataObject = {\r\n            metodopagoid: this.state.metodopagoid != '' ? this.state.metodopagoid : '',\r\n            clave: this.state.Clave,\r\n            nombre: this.state.Nombre,\r\n            descripcion: this.state.Descripcion,\r\n            cuota: this.state.Cuota\r\n        };\r\n        console.log(dataObject);\r\n\r\n        let requestMethod = !this.state.isEditing ?\r\n            'POST' :\r\n            'PUT';\r\n\r\n        $.ajax({\r\n            url: 'https://pchproject-api.herokuapp.com/api/metodopago',\r\n            method: requestMethod,\r\n            contentType: 'application/json',\r\n            dataType: 'json',\r\n            data: JSON.stringify(dataObject),\r\n            success: function (response) {\r\n                console.log(response);\r\n                this.resetState();\r\n            }.bind(this),\r\n            fail: function (error) {\r\n                console.log(error);\r\n            }.bind(this)\r\n        });\r\n    }\r\n\r\n    handleEdit() {\r\n        this.setState({isEditing: true});\r\n    }\r\n    handleDelete() {\r\n        this.setState({ isEditing: true });\r\n    }\r\n\r\n    handleInput(e) {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid\">\r\n                <DetailviewHeader \r\n                    Name=\"Metodo de pago\"\r\n                    Value={this.state.Clave}\r\n                    ListViewPath={\"/metodospago\"}\r\n                    handleEdit={this.handleEdit}\r\n                    handleDelete={this.handleDelete}\r\n                    isEditing={this.state.isEditing}\r\n                    isCreating={this.state.isCreating}\r\n                />\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <fieldset disabled={ !(this.state.isCreating || this.state.isEditing) }>\r\n                        <input type=\"hidden\" name=\"id\" value={this.state.idMarca} />\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"claveInput\">\r\n                                Clave\r\n                            </label>\r\n                            <input type=\"text\"\r\n                                id=\"claveInput\"\r\n                                name=\"Clave\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Clave\"\r\n                                onChange={this.handleInput}\r\n                                value={this.state.Clave} />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"nombreInput\">\r\n                                Nombre\r\n                        </label>\r\n                            <input type=\"text\"\r\n                                id=\"nombreInput\"\r\n                                name=\"Nombre\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Nombre\"\r\n                                onChange={this.handleInput}\r\n                                value={this.state.Nombre} />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"DescripcionInput\">\r\n                                Descripcion\r\n                        </label>\r\n                            <input type=\"text\"\r\n                                id=\"DescripcionInput\"\r\n                                name=\"Descripcion\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Descripcion\"\r\n                                onChange={this.handleInput}\r\n                                value={this.state.Descripcion} />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"DescripcionInput\">\r\n                                Cuota\r\n                        </label>\r\n                            <input type=\"number\"\r\n                                id=\"DescripcionInput\"\r\n                                name=\"Cuota\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Cuota\"\r\n                                onChange={this.handleInput}\r\n                                value={this.state.Cuota} />\r\n                        </div>\r\n                        {\r\n                            (this.state.isEditing || this.state.isCreating) &&\r\n                            <React.Fragment>\r\n                                <button\r\n                                    type=\"submit\"\r\n                                    className=\"button button-danger\"\r\n                                    onClick={() => this.resetState()}>Cancelar</button>\r\n                                <button type=\"submit\" className=\"button button-edit\">Guardar</button>\r\n                            </React.Fragment>\r\n                        }\r\n                    </fieldset>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n",{"ruleId":"311","severity":1,"message":"312","line":3,"column":8,"nodeType":"313","messageId":"314","endLine":3,"endColumn":9},{"ruleId":"311","severity":1,"message":"315","line":4,"column":8,"nodeType":"313","messageId":"314","endLine":4,"endColumn":14},{"ruleId":"316","replacedBy":"317"},{"ruleId":"318","replacedBy":"319"},{"ruleId":"311","severity":1,"message":"320","line":18,"column":8,"nodeType":"313","messageId":"314","endLine":18,"endColumn":25},{"ruleId":"311","severity":1,"message":"321","line":4,"column":10,"nodeType":"313","messageId":"314","endLine":4,"endColumn":16},{"ruleId":"311","severity":1,"message":"322","line":4,"column":18,"nodeType":"313","messageId":"314","endLine":4,"endColumn":25},{"ruleId":"311","severity":1,"message":"323","line":4,"column":27,"nodeType":"313","messageId":"314","endLine":4,"endColumn":33},{"ruleId":"324","severity":1,"message":"325","line":12,"column":53,"nodeType":"326","messageId":"327","endLine":12,"endColumn":55},{"ruleId":"324","severity":1,"message":"325","line":16,"column":47,"nodeType":"326","messageId":"327","endLine":16,"endColumn":49},{"ruleId":"324","severity":1,"message":"325","line":17,"column":45,"nodeType":"326","messageId":"327","endLine":17,"endColumn":47},{"ruleId":"324","severity":1,"message":"325","line":28,"column":36,"nodeType":"326","messageId":"327","endLine":28,"endColumn":38},{"ruleId":"328","severity":1,"message":"329","line":41,"column":19,"nodeType":"330","messageId":"327","endLine":41,"endColumn":23,"fix":"331"},{"ruleId":"324","severity":1,"message":"325","line":63,"column":49,"nodeType":"326","messageId":"327","endLine":63,"endColumn":51},{"ruleId":"328","severity":1,"message":"329","line":86,"column":15,"nodeType":"330","messageId":"327","endLine":86,"endColumn":19,"fix":"332"},{"ruleId":"328","severity":1,"message":"329","line":106,"column":15,"nodeType":"330","messageId":"327","endLine":106,"endColumn":19,"fix":"333"},{"ruleId":"324","severity":1,"message":"334","line":31,"column":61,"nodeType":"326","messageId":"327","endLine":31,"endColumn":63},{"ruleId":"311","severity":1,"message":"323","line":4,"column":5,"nodeType":"313","messageId":"314","endLine":4,"endColumn":11},{"ruleId":"311","severity":1,"message":"321","line":5,"column":5,"nodeType":"313","messageId":"314","endLine":5,"endColumn":11},{"ruleId":"311","severity":1,"message":"322","line":6,"column":5,"nodeType":"313","messageId":"314","endLine":6,"endColumn":12},{"ruleId":"324","severity":1,"message":"325","line":15,"column":51,"nodeType":"326","messageId":"327","endLine":15,"endColumn":53},{"ruleId":"324","severity":1,"message":"325","line":37,"column":47,"nodeType":"326","messageId":"327","endLine":37,"endColumn":49},{"ruleId":"324","severity":1,"message":"325","line":38,"column":45,"nodeType":"326","messageId":"327","endLine":38,"endColumn":47},{"ruleId":"328","severity":1,"message":"329","line":61,"column":15,"nodeType":"330","messageId":"327","endLine":61,"endColumn":19,"fix":"335"},{"ruleId":"328","severity":1,"message":"329","line":73,"column":15,"nodeType":"330","messageId":"327","endLine":73,"endColumn":19,"fix":"336"},{"ruleId":"328","severity":1,"message":"329","line":84,"column":15,"nodeType":"330","messageId":"327","endLine":84,"endColumn":19,"fix":"337"},{"ruleId":"324","severity":1,"message":"325","line":86,"column":34,"nodeType":"326","messageId":"327","endLine":86,"endColumn":36},{"ruleId":"328","severity":1,"message":"329","line":98,"column":19,"nodeType":"330","messageId":"327","endLine":98,"endColumn":23,"fix":"338"},{"ruleId":"324","severity":1,"message":"325","line":127,"column":45,"nodeType":"326","messageId":"327","endLine":127,"endColumn":47},{"ruleId":"328","severity":1,"message":"329","line":163,"column":15,"nodeType":"330","messageId":"327","endLine":163,"endColumn":19,"fix":"339"},{"ruleId":"328","severity":1,"message":"329","line":183,"column":15,"nodeType":"330","messageId":"327","endLine":183,"endColumn":19,"fix":"340"},{"ruleId":"311","severity":1,"message":"321","line":4,"column":10,"nodeType":"313","messageId":"314","endLine":4,"endColumn":16},{"ruleId":"311","severity":1,"message":"322","line":4,"column":18,"nodeType":"313","messageId":"314","endLine":4,"endColumn":25},{"ruleId":"311","severity":1,"message":"323","line":4,"column":27,"nodeType":"313","messageId":"314","endLine":4,"endColumn":33},{"ruleId":"324","severity":1,"message":"325","line":11,"column":49,"nodeType":"326","messageId":"327","endLine":11,"endColumn":51},{"ruleId":"324","severity":1,"message":"325","line":15,"column":47,"nodeType":"326","messageId":"327","endLine":15,"endColumn":49},{"ruleId":"324","severity":1,"message":"325","line":16,"column":45,"nodeType":"326","messageId":"327","endLine":16,"endColumn":47},{"ruleId":"324","severity":1,"message":"325","line":27,"column":32,"nodeType":"326","messageId":"327","endLine":27,"endColumn":34},{"ruleId":"328","severity":1,"message":"329","line":41,"column":19,"nodeType":"330","messageId":"327","endLine":41,"endColumn":23,"fix":"341"},{"ruleId":"324","severity":1,"message":"325","line":64,"column":41,"nodeType":"326","messageId":"327","endLine":64,"endColumn":43},{"ruleId":"328","severity":1,"message":"329","line":88,"column":15,"nodeType":"330","messageId":"327","endLine":88,"endColumn":19,"fix":"342"},{"ruleId":"311","severity":1,"message":"321","line":4,"column":10,"nodeType":"313","messageId":"314","endLine":4,"endColumn":16},{"ruleId":"311","severity":1,"message":"322","line":4,"column":18,"nodeType":"313","messageId":"314","endLine":4,"endColumn":25},{"ruleId":"311","severity":1,"message":"323","line":4,"column":27,"nodeType":"313","messageId":"314","endLine":4,"endColumn":33},{"ruleId":"324","severity":1,"message":"325","line":12,"column":50,"nodeType":"326","messageId":"327","endLine":12,"endColumn":52},{"ruleId":"324","severity":1,"message":"325","line":18,"column":47,"nodeType":"326","messageId":"327","endLine":18,"endColumn":49},{"ruleId":"324","severity":1,"message":"325","line":19,"column":45,"nodeType":"326","messageId":"327","endLine":19,"endColumn":47},{"ruleId":"324","severity":1,"message":"325","line":30,"column":33,"nodeType":"326","messageId":"327","endLine":30,"endColumn":35},{"ruleId":"324","severity":1,"message":"325","line":41,"column":49,"nodeType":"326","messageId":"327","endLine":41,"endColumn":51},{"ruleId":"328","severity":1,"message":"329","line":46,"column":19,"nodeType":"330","messageId":"327","endLine":46,"endColumn":23,"fix":"343"},{"ruleId":"328","severity":1,"message":"329","line":59,"column":15,"nodeType":"330","messageId":"327","endLine":59,"endColumn":19,"fix":"344"},{"ruleId":"324","severity":1,"message":"325","line":83,"column":43,"nodeType":"326","messageId":"327","endLine":83,"endColumn":45},{"ruleId":"324","severity":1,"message":"325","line":87,"column":50,"nodeType":"326","messageId":"327","endLine":87,"endColumn":52},{"ruleId":"328","severity":1,"message":"329","line":106,"column":15,"nodeType":"330","messageId":"327","endLine":106,"endColumn":19,"fix":"345"},{"ruleId":"328","severity":1,"message":"329","line":126,"column":15,"nodeType":"330","messageId":"327","endLine":126,"endColumn":19,"fix":"346"},{"ruleId":"311","severity":1,"message":"347","line":2,"column":10,"nodeType":"313","messageId":"314","endLine":2,"endColumn":14},{"ruleId":"328","severity":1,"message":"329","line":32,"column":15,"nodeType":"330","messageId":"327","endLine":32,"endColumn":19,"fix":"348"},{"ruleId":"311","severity":1,"message":"347","line":2,"column":10,"nodeType":"313","messageId":"314","endLine":2,"endColumn":14},{"ruleId":"311","severity":1,"message":"321","line":5,"column":10,"nodeType":"313","messageId":"314","endLine":5,"endColumn":16},{"ruleId":"311","severity":1,"message":"322","line":5,"column":18,"nodeType":"313","messageId":"314","endLine":5,"endColumn":25},{"ruleId":"311","severity":1,"message":"349","line":5,"column":27,"nodeType":"313","messageId":"314","endLine":5,"endColumn":38},{"ruleId":"311","severity":1,"message":"323","line":5,"column":40,"nodeType":"313","messageId":"314","endLine":5,"endColumn":46},{"ruleId":"324","severity":1,"message":"325","line":13,"column":54,"nodeType":"326","messageId":"327","endLine":13,"endColumn":56},{"ruleId":"324","severity":1,"message":"325","line":21,"column":45,"nodeType":"326","messageId":"327","endLine":21,"endColumn":47},{"ruleId":"324","severity":1,"message":"325","line":22,"column":47,"nodeType":"326","messageId":"327","endLine":22,"endColumn":49},{"ruleId":"328","severity":1,"message":"329","line":44,"column":15,"nodeType":"330","messageId":"327","endLine":44,"endColumn":19,"fix":"350"},{"ruleId":"328","severity":1,"message":"329","line":57,"column":15,"nodeType":"330","messageId":"327","endLine":57,"endColumn":19,"fix":"351"},{"ruleId":"324","severity":1,"message":"325","line":59,"column":37,"nodeType":"326","messageId":"327","endLine":59,"endColumn":39},{"ruleId":"328","severity":1,"message":"329","line":75,"column":19,"nodeType":"330","messageId":"327","endLine":75,"endColumn":23,"fix":"352"},{"ruleId":"324","severity":1,"message":"325","line":100,"column":51,"nodeType":"326","messageId":"327","endLine":100,"endColumn":53},{"ruleId":"324","severity":1,"message":"325","line":102,"column":43,"nodeType":"326","messageId":"327","endLine":102,"endColumn":45},{"ruleId":"324","severity":1,"message":"325","line":103,"column":43,"nodeType":"326","messageId":"327","endLine":103,"endColumn":45},{"ruleId":"328","severity":1,"message":"329","line":123,"column":15,"nodeType":"330","messageId":"327","endLine":123,"endColumn":19,"fix":"353"},{"ruleId":"328","severity":1,"message":"329","line":143,"column":15,"nodeType":"330","messageId":"327","endLine":143,"endColumn":19,"fix":"354"},{"ruleId":"311","severity":1,"message":"321","line":4,"column":10,"nodeType":"313","messageId":"314","endLine":4,"endColumn":16},{"ruleId":"311","severity":1,"message":"322","line":4,"column":18,"nodeType":"313","messageId":"314","endLine":4,"endColumn":25},{"ruleId":"311","severity":1,"message":"323","line":4,"column":27,"nodeType":"313","messageId":"314","endLine":4,"endColumn":33},{"ruleId":"311","severity":1,"message":"355","line":5,"column":10,"nodeType":"313","messageId":"314","endLine":5,"endColumn":23},{"ruleId":"324","severity":1,"message":"325","line":13,"column":52,"nodeType":"326","messageId":"327","endLine":13,"endColumn":54},{"ruleId":"324","severity":1,"message":"325","line":21,"column":47,"nodeType":"326","messageId":"327","endLine":21,"endColumn":49},{"ruleId":"324","severity":1,"message":"325","line":22,"column":45,"nodeType":"326","messageId":"327","endLine":22,"endColumn":47},{"ruleId":"324","severity":1,"message":"325","line":35,"column":35,"nodeType":"326","messageId":"327","endLine":35,"endColumn":37},{"ruleId":"324","severity":1,"message":"325","line":43,"column":58,"nodeType":"326","messageId":"327","endLine":43,"endColumn":60},{"ruleId":"324","severity":1,"message":"325","line":44,"column":53,"nodeType":"326","messageId":"327","endLine":44,"endColumn":55},{"ruleId":"324","severity":1,"message":"325","line":45,"column":55,"nodeType":"326","messageId":"327","endLine":45,"endColumn":57},{"ruleId":"324","severity":1,"message":"325","line":46,"column":52,"nodeType":"326","messageId":"327","endLine":46,"endColumn":54},{"ruleId":"328","severity":1,"message":"329","line":51,"column":19,"nodeType":"330","messageId":"327","endLine":51,"endColumn":23,"fix":"356"},{"ruleId":"328","severity":1,"message":"329","line":64,"column":15,"nodeType":"330","messageId":"327","endLine":64,"endColumn":19,"fix":"357"},{"ruleId":"324","severity":1,"message":"325","line":90,"column":47,"nodeType":"326","messageId":"327","endLine":90,"endColumn":49},{"ruleId":"324","severity":1,"message":"325","line":95,"column":39,"nodeType":"326","messageId":"327","endLine":95,"endColumn":41},{"ruleId":"328","severity":1,"message":"329","line":114,"column":15,"nodeType":"330","messageId":"327","endLine":114,"endColumn":19,"fix":"358"},{"ruleId":"328","severity":1,"message":"329","line":134,"column":15,"nodeType":"330","messageId":"327","endLine":134,"endColumn":19,"fix":"359"},{"ruleId":"311","severity":1,"message":"321","line":2,"column":10,"nodeType":"313","messageId":"314","endLine":2,"endColumn":16},{"ruleId":"311","severity":1,"message":"322","line":2,"column":18,"nodeType":"313","messageId":"314","endLine":2,"endColumn":25},{"ruleId":"328","severity":1,"message":"329","line":26,"column":15,"nodeType":"330","messageId":"327","endLine":26,"endColumn":19,"fix":"360"},{"ruleId":"311","severity":1,"message":"321","line":4,"column":10,"nodeType":"313","messageId":"314","endLine":4,"endColumn":16},{"ruleId":"311","severity":1,"message":"322","line":4,"column":18,"nodeType":"313","messageId":"314","endLine":4,"endColumn":25},{"ruleId":"328","severity":1,"message":"329","line":27,"column":15,"nodeType":"330","messageId":"327","endLine":27,"endColumn":19,"fix":"361"},{"ruleId":"328","severity":1,"message":"329","line":25,"column":15,"nodeType":"330","messageId":"327","endLine":25,"endColumn":19,"fix":"362"},{"ruleId":"311","severity":1,"message":"349","line":4,"column":27,"nodeType":"313","messageId":"314","endLine":4,"endColumn":38},{"ruleId":"328","severity":1,"message":"329","line":25,"column":15,"nodeType":"330","messageId":"327","endLine":25,"endColumn":19,"fix":"363"},{"ruleId":"328","severity":1,"message":"329","line":21,"column":15,"nodeType":"330","messageId":"327","endLine":21,"endColumn":19,"fix":"364"},{"ruleId":"328","severity":1,"message":"329","line":22,"column":15,"nodeType":"330","messageId":"327","endLine":22,"endColumn":19,"fix":"365"},{"ruleId":"328","severity":1,"message":"329","line":25,"column":15,"nodeType":"330","messageId":"327","endLine":25,"endColumn":19,"fix":"366"},{"ruleId":"328","severity":1,"message":"329","line":22,"column":15,"nodeType":"330","messageId":"327","endLine":22,"endColumn":19,"fix":"367"},{"ruleId":"311","severity":1,"message":"321","line":4,"column":10,"nodeType":"313","messageId":"314","endLine":4,"endColumn":16},{"ruleId":"311","severity":1,"message":"322","line":4,"column":18,"nodeType":"313","messageId":"314","endLine":4,"endColumn":25},{"ruleId":"311","severity":1,"message":"349","line":4,"column":27,"nodeType":"313","messageId":"314","endLine":4,"endColumn":38},{"ruleId":"311","severity":1,"message":"323","line":4,"column":40,"nodeType":"313","messageId":"314","endLine":4,"endColumn":46},{"ruleId":"324","severity":1,"message":"325","line":12,"column":47,"nodeType":"326","messageId":"327","endLine":12,"endColumn":49},{"ruleId":"324","severity":1,"message":"325","line":16,"column":47,"nodeType":"326","messageId":"327","endLine":16,"endColumn":49},{"ruleId":"324","severity":1,"message":"325","line":17,"column":45,"nodeType":"326","messageId":"327","endLine":17,"endColumn":47},{"ruleId":"324","severity":1,"message":"325","line":28,"column":30,"nodeType":"326","messageId":"327","endLine":28,"endColumn":32},{"ruleId":"328","severity":1,"message":"329","line":44,"column":19,"nodeType":"330","messageId":"327","endLine":44,"endColumn":23,"fix":"368"},{"ruleId":"324","severity":1,"message":"325","line":69,"column":37,"nodeType":"326","messageId":"327","endLine":69,"endColumn":39},{"ruleId":"328","severity":1,"message":"329","line":92,"column":15,"nodeType":"330","messageId":"327","endLine":92,"endColumn":19,"fix":"369"},{"ruleId":"328","severity":1,"message":"329","line":112,"column":15,"nodeType":"330","messageId":"327","endLine":112,"endColumn":19,"fix":"370"},{"ruleId":"311","severity":1,"message":"321","line":4,"column":10,"nodeType":"313","messageId":"314","endLine":4,"endColumn":16},{"ruleId":"311","severity":1,"message":"322","line":4,"column":18,"nodeType":"313","messageId":"314","endLine":4,"endColumn":25},{"ruleId":"311","severity":1,"message":"323","line":4,"column":27,"nodeType":"313","messageId":"314","endLine":4,"endColumn":33},{"ruleId":"324","severity":1,"message":"325","line":12,"column":55,"nodeType":"326","messageId":"327","endLine":12,"endColumn":57},{"ruleId":"324","severity":1,"message":"325","line":17,"column":47,"nodeType":"326","messageId":"327","endLine":17,"endColumn":49},{"ruleId":"324","severity":1,"message":"325","line":18,"column":45,"nodeType":"326","messageId":"327","endLine":18,"endColumn":47},{"ruleId":"324","severity":1,"message":"325","line":29,"column":38,"nodeType":"326","messageId":"327","endLine":29,"endColumn":40},{"ruleId":"328","severity":1,"message":"329","line":44,"column":19,"nodeType":"330","messageId":"327","endLine":44,"endColumn":23,"fix":"371"},{"ruleId":"324","severity":1,"message":"325","line":68,"column":53,"nodeType":"326","messageId":"327","endLine":68,"endColumn":55},{"ruleId":"328","severity":1,"message":"329","line":92,"column":15,"nodeType":"330","messageId":"327","endLine":92,"endColumn":19,"fix":"372"},{"ruleId":"328","severity":1,"message":"329","line":112,"column":15,"nodeType":"330","messageId":"327","endLine":112,"endColumn":19,"fix":"373"},{"ruleId":"311","severity":1,"message":"374","line":2,"column":13,"nodeType":"313","messageId":"314","endLine":2,"endColumn":17},{"ruleId":"311","severity":1,"message":"321","line":4,"column":10,"nodeType":"313","messageId":"314","endLine":4,"endColumn":16},{"ruleId":"311","severity":1,"message":"322","line":4,"column":18,"nodeType":"313","messageId":"314","endLine":4,"endColumn":25},{"ruleId":"311","severity":1,"message":"323","line":4,"column":27,"nodeType":"313","messageId":"314","endLine":4,"endColumn":33},{"ruleId":"311","severity":1,"message":"375","line":7,"column":8,"nodeType":"313","messageId":"314","endLine":7,"endColumn":20},{"ruleId":"324","severity":1,"message":"325","line":14,"column":52,"nodeType":"326","messageId":"327","endLine":14,"endColumn":54},{"ruleId":"324","severity":1,"message":"325","line":31,"column":47,"nodeType":"326","messageId":"327","endLine":31,"endColumn":49},{"ruleId":"324","severity":1,"message":"325","line":32,"column":45,"nodeType":"326","messageId":"327","endLine":32,"endColumn":47},{"ruleId":"328","severity":1,"message":"329","line":64,"column":15,"nodeType":"330","messageId":"327","endLine":64,"endColumn":19,"fix":"376"},{"ruleId":"328","severity":1,"message":"329","line":76,"column":15,"nodeType":"330","messageId":"327","endLine":76,"endColumn":19,"fix":"377"},{"ruleId":"324","severity":1,"message":"325","line":78,"column":35,"nodeType":"326","messageId":"327","endLine":78,"endColumn":37},{"ruleId":"328","severity":1,"message":"329","line":104,"column":19,"nodeType":"330","messageId":"327","endLine":104,"endColumn":23,"fix":"378"},{"ruleId":"324","severity":1,"message":"334","line":170,"column":32,"nodeType":"326","messageId":"327","endLine":170,"endColumn":34},{"ruleId":"324","severity":1,"message":"334","line":171,"column":32,"nodeType":"326","messageId":"327","endLine":171,"endColumn":34},{"ruleId":"328","severity":1,"message":"329","line":212,"column":15,"nodeType":"330","messageId":"327","endLine":212,"endColumn":19,"fix":"379"},{"ruleId":"328","severity":1,"message":"329","line":233,"column":15,"nodeType":"330","messageId":"327","endLine":233,"endColumn":19,"fix":"380"},{"ruleId":"328","severity":1,"message":"329","line":293,"column":19,"nodeType":"330","messageId":"327","endLine":293,"endColumn":23,"fix":"381"},{"ruleId":"328","severity":1,"message":"329","line":38,"column":15,"nodeType":"330","messageId":"327","endLine":38,"endColumn":19,"fix":"382"},{"ruleId":"328","severity":1,"message":"329","line":62,"column":15,"nodeType":"330","messageId":"327","endLine":62,"endColumn":19,"fix":"383"},{"ruleId":"324","severity":1,"message":"325","line":71,"column":37,"nodeType":"326","messageId":"327","endLine":71,"endColumn":39},{"ruleId":"324","severity":1,"message":"325","line":73,"column":43,"nodeType":"326","messageId":"327","endLine":73,"endColumn":45},{"ruleId":"328","severity":1,"message":"329","line":94,"column":15,"nodeType":"330","messageId":"327","endLine":94,"endColumn":19,"fix":"384"},{"ruleId":"328","severity":1,"message":"329","line":117,"column":15,"nodeType":"330","messageId":"327","endLine":117,"endColumn":19,"fix":"385"},{"ruleId":"328","severity":1,"message":"329","line":133,"column":15,"nodeType":"330","messageId":"327","endLine":133,"endColumn":19,"fix":"386"},{"ruleId":"311","severity":1,"message":"387","line":3,"column":10,"nodeType":"313","messageId":"314","endLine":3,"endColumn":27},{"ruleId":"388","severity":1,"message":"389","line":6,"column":5,"nodeType":"390","messageId":"391","endLine":8,"endColumn":6},{"ruleId":"311","severity":1,"message":"321","line":4,"column":10,"nodeType":"313","messageId":"314","endLine":4,"endColumn":16},{"ruleId":"311","severity":1,"message":"322","line":4,"column":18,"nodeType":"313","messageId":"314","endLine":4,"endColumn":25},{"ruleId":"328","severity":1,"message":"329","line":23,"column":15,"nodeType":"330","messageId":"327","endLine":23,"endColumn":19,"fix":"392"},{"ruleId":"388","severity":1,"message":"389","line":5,"column":5,"nodeType":"390","messageId":"391","endLine":7,"endColumn":6},{"ruleId":"328","severity":1,"message":"329","line":22,"column":15,"nodeType":"330","messageId":"327","endLine":22,"endColumn":19,"fix":"393"},{"ruleId":"328","severity":1,"message":"329","line":22,"column":15,"nodeType":"330","messageId":"327","endLine":22,"endColumn":19,"fix":"394"},{"ruleId":"324","severity":1,"message":"325","line":9,"column":54,"nodeType":"326","messageId":"327","endLine":9,"endColumn":56},{"ruleId":"324","severity":1,"message":"325","line":14,"column":47,"nodeType":"326","messageId":"327","endLine":14,"endColumn":49},{"ruleId":"324","severity":1,"message":"325","line":15,"column":45,"nodeType":"326","messageId":"327","endLine":15,"endColumn":47},{"ruleId":"324","severity":1,"message":"325","line":25,"column":37,"nodeType":"326","messageId":"327","endLine":25,"endColumn":39},{"ruleId":"328","severity":1,"message":"329","line":39,"column":19,"nodeType":"330","messageId":"327","endLine":39,"endColumn":23,"fix":"395"},{"ruleId":"324","severity":1,"message":"325","line":63,"column":51,"nodeType":"326","messageId":"327","endLine":63,"endColumn":53},{"ruleId":"328","severity":1,"message":"329","line":87,"column":15,"nodeType":"330","messageId":"327","endLine":87,"endColumn":19,"fix":"396"},"no-unused-vars","'$' is defined but never used.","Identifier","unusedVar","'Popper' is defined but never used.","no-native-reassign",["397"],"no-negated-in-lhs",["398"],"'InventarioDetalle' is defined but never used.","'FaEdit' is defined but never used.","'FaTrash' is defined but never used.","'FaPlus' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-extra-bind","The function binding is unnecessary.","CallExpression",{"range":"399","text":"400"},{"range":"401","text":"400"},{"range":"402","text":"400"},"Expected '===' and instead saw '=='.",{"range":"403","text":"400"},{"range":"404","text":"400"},{"range":"405","text":"400"},{"range":"406","text":"400"},{"range":"407","text":"400"},{"range":"408","text":"400"},{"range":"409","text":"400"},{"range":"410","text":"400"},{"range":"411","text":"400"},{"range":"412","text":"400"},{"range":"413","text":"400"},{"range":"414","text":"400"},"'Link' is defined but never used.",{"range":"415","text":"400"},"'FaExpandAlt' is defined but never used.",{"range":"416","text":"400"},{"range":"417","text":"400"},{"range":"418","text":"400"},{"range":"419","text":"400"},{"range":"420","text":"400"},"'ToastProvider' is defined but never used.",{"range":"421","text":"400"},{"range":"422","text":"400"},{"range":"423","text":"400"},{"range":"424","text":"400"},{"range":"425","text":"400"},{"range":"426","text":"400"},{"range":"427","text":"400"},{"range":"428","text":"400"},{"range":"429","text":"400"},{"range":"430","text":"400"},{"range":"431","text":"400"},{"range":"432","text":"400"},{"range":"433","text":"400"},{"range":"434","text":"400"},{"range":"435","text":"400"},{"range":"436","text":"400"},{"range":"437","text":"400"},{"range":"438","text":"400"},"'data' is defined but never used.","'ImageGallery' is defined but never used.",{"range":"439","text":"400"},{"range":"440","text":"400"},{"range":"441","text":"400"},{"range":"442","text":"400"},{"range":"443","text":"400"},{"range":"444","text":"400"},{"range":"445","text":"400"},{"range":"446","text":"400"},{"range":"447","text":"400"},{"range":"448","text":"400"},{"range":"449","text":"400"},"'FaRegHandScissors' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor",{"range":"450","text":"400"},{"range":"451","text":"400"},{"range":"452","text":"400"},{"range":"453","text":"400"},{"range":"454","text":"400"},"no-global-assign","no-unsafe-negation",[1617,1628],"",[2935,2946],[3527,3538],[1977,1988],[2386,2397],[2787,2798],[3365,3376],[5498,5509],[6071,6082],[1628,1639],[2965,2976],[1840,1851],[2253,2264],[3696,3707],[4267,4278],[909,920],[1620,1631],[2087,2098],[2898,2909],[4375,4386],[4968,4979],[2190,2201],[2597,2608],[4129,4140],[4713,4724],[802,813],[790,801],[753,764],[698,709],[634,645],[657,668],[758,769],[665,676],[1729,1740],[3090,3101],[3656,3667],[1767,1778],[3162,3173],[3738,3749],[2351,2362],[2742,2753],[3980,3991],[7821,7832],[8393,8404],[10365,10376],[1254,1265],[1962,1973],[2973,2984],[3743,3754],[4240,4251],[724,735],[695,706],[689,700],[1631,1642],[3022,3033]]